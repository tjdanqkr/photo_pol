{"version":3,"sources":["store/hooks.ts","store/themeMode/index.ts","components/layout/Headers.tsx","style/theme.ts","style/global-style.ts","img/logo.svg","components/home/Home.tsx","components/layout/Table/TableBody.tsx","components/layout/Table/TableFilter.tsx","components/layout/Table/TableHeader.tsx","components/layout/Table/TableForm.tsx","components/skill/CoronaMap.tsx","router/index.tsx","components/layout/Footer.tsx","App.tsx","reportWebVitals.ts","api/corona.ts","store/corona/coronaSaga.ts","store/saga/index.ts","store/corona/index.ts","store/index.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","initialState","mode","localStorage","getItem","themeSlice","createSlice","name","reducers","darkMode","state","setItem","lightMode","actions","HeaderForm","styled","div","Headers","theme","dispatch","Navbar","collapseOnSelect","expand","bg","variant","sticky","Container","style","fontWeight","Brand","as","Link","to","Toggle","Collapse","id","Nav","className","NavDropdown","title","Item","href","Button","onClick","darktheme","mainBackground","color","primaryText","secondaryText","disable","border","divider","background","tableHeader","oddBackground","response","lighttheme","GlobalStyle","createGlobalStyle","Title","H2","H1","TitleText","p","TitleBox","GrayBox","LogoForm","RelativeBox","TechTitle","b","TechForm","TechImg","img","TechImgTem","TechText","ContentForm","ContentTitle","ContentSub","Home","Row","Col","md","fluid","src","logosvg","alt","text","authorship","map","data","i","crossOrigin","sub","TableTr","TableTrOdd","TableTd","cache","CellMeasurerCache","defaultWidth","fixedWidth","TableBody","props","renderList","hedearList","listRef","useRef","Column","index","key","parent","rowData","columnIndex","rowIndex","width","size","height","overflow","ref","overscanRowCount","rowCount","length","rowHeight","rowRenderer","deferredMeasurementCache","TableFilter","TableHeader","TableForm","getList","CoronaMap","corona","handleFormSubmit2","useCallback","event","type","console","log","e","filterType","custom","ControlRoute","exact","path","component","FooterComponent","FooterTitle","h2","FooterText","Footer","MyContainer","Main","App","basename","process","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","axios","defaults","baseURL","coronaApi","a","start","get","res","callCoronaApi","getCoronaApi","action","call","put","payload","Corona19Status","row","Error","message","takeEvery","rootSaga","all","SUSSESS_CORONA","concatList","concat","FAIL_CORONA","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","themeMode","userLog","devTools","middleware","run","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46007fd7.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from './';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport type { RootState } from '../../store';\r\n\r\n// Define a type for the slice state\r\ninterface ThemeState {\r\n  mode: 'dark' | 'light';\r\n}\r\n\r\n// Define the initial state using that type\r\nconst initialState: ThemeState = {\r\n  mode: localStorage.getItem('mode') === 'dark' ? 'dark' : 'light',\r\n};\r\n\r\nexport const themeSlice = createSlice({\r\n  name: 'theme',\r\n  initialState,\r\n  reducers: {\r\n    darkMode: (state) => {\r\n      localStorage.setItem('mode', 'dark');\r\n      state.mode = 'dark';\r\n    },\r\n    lightMode: (state) => {\r\n      localStorage.setItem('mode', 'light');\r\n      state.mode = 'light';\r\n    },\r\n  },\r\n});\r\n\r\nexport const { darkMode, lightMode } = themeSlice.actions;\r\n\r\n// Other code such as selectors can use the imported `RootState` type\r\nexport const selectTheme = (state: RootState) => state.theme.mode;\r\n\r\nexport default themeSlice.reducer;\r\n","import { Container, Nav, Navbar, NavDropdown, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\r\nimport { darkMode, lightMode } from '../../store/themeMode';\r\nconst HeaderForm = styled.div`\r\n  font-weight: bolder;\r\n`;\r\nfunction Headers() {\r\n  const mode = useAppSelector((state) => state.theme.mode);\r\n  const dispatch = useAppDispatch();\r\n  return (\r\n    <HeaderForm>\r\n      <Navbar\r\n        collapseOnSelect\r\n        expand=\"md\"\r\n        bg={mode}\r\n        variant={mode}\r\n        sticky=\"top\"\r\n      >\r\n        <Container style={{ fontWeight: 'bolder' }}>\r\n          <Navbar.Brand as={Link} to=\"/\">\r\n            <h2>\r\n              <b>박성무의 경력기술서</b>\r\n            </h2>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"me-auto\">\r\n              <Nav.Link as={Link} to=\"/userlog\">\r\n                <strong>profile</strong>\r\n              </Nav.Link>\r\n\r\n              <Nav.Link as={Link} to=\"/userlog\"></Nav.Link>\r\n              <NavDropdown title=\"skill\" id=\"collasible-nav-dropdown\">\r\n                <NavDropdown.Item as={Link} to=\"/skill/1\">\r\n                  userlog\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.2\">\r\n                  Another action\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n              <Nav.Link as={Link} to=\"/userlog\">\r\n                <strong>self-introduction</strong>\r\n              </Nav.Link>\r\n              <Nav.Link as={Link} to=\"/userlog\">\r\n                <strong>etc</strong>\r\n              </Nav.Link>\r\n              {/* <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.2\">\r\n                Another action\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item href=\"#action/3.4\">\r\n                Separated link\r\n              </NavDropdown.Item>\r\n            </NavDropdown> */}\r\n            </Nav>\r\n            <Nav>\r\n              <Button\r\n                variant={mode === 'dark' ? 'secondary' : 'dark'}\r\n                onClick={() => {\r\n                  mode === 'dark'\r\n                    ? dispatch(lightMode())\r\n                    : dispatch(darkMode());\r\n                }}\r\n              >\r\n                {mode === 'dark' ? 'light' : 'dark'}\r\n              </Button>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </HeaderForm>\r\n  );\r\n}\r\n\r\nexport default Headers;\r\n","import { DefaultTheme } from 'styled-components';\r\n\r\nconst darktheme: DefaultTheme = {\r\n  mainBackground: `#333`,\r\n\r\n  color: `rgba(255,255,255,0.85)`,\r\n  title: `rgba(255,255,255,0.85)`,\r\n  primaryText: `rgba(255,255,255,0.65)`,\r\n  secondaryText: `rgba(255,255,255,0.45)`,\r\n  disable: `rgba(255,255,255,0.25)`,\r\n  border: `rgba(255,255,255,0.15)`,\r\n  divider: `rgba(255,255,255,0.06)`,\r\n  background: `rgba(255,255,255,0.04)`,\r\n  tableHeader: `rgba(255,255,255,0.02)`,\r\n  oddBackground: `rgba(0, 0, 0, 0.85)`,\r\n  response: {},\r\n};\r\n\r\nconst lighttheme: DefaultTheme = {\r\n  mainBackground: `#fff`,\r\n\r\n  color: `rgba(0, 0, 0, 0.85)`,\r\n  title: `rgba(0, 0, 0, 0.85)`,\r\n  primaryText: `rgba(0, 0, 0, 0.75)`,\r\n  secondaryText: `rgba(0, 0, 0, 0.45)`,\r\n  disable: `rgba(0, 0, 0, 0.25)`,\r\n  border: `rgba(0, 0, 0, 0.15)`,\r\n  divider: `rgba(0, 0, 0, 0.06)`,\r\n  background: `rgba(0, 0, 0, 0.04)`,\r\n  tableHeader: `rgba(0, 0, 0, 0.02)`,\r\n  oddBackground: `rgba(255,255,255,0.85)`,\r\n\r\n  response: {},\r\n};\r\n\r\nexport { darktheme, lighttheme };\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n  html,\r\n  body {\r\n    height: 100%;\r\n  }\r\n\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Col, Row, Container } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport logosvg from '../../img/logo.svg';\r\nconst Title = styled.div`\r\n  background-color: #212529;\r\n  color: white;\r\n  padding-top: 3em;\r\n  padding-bottom: 3em;\r\n`;\r\nconst H2 = styled.div`\r\n  font-size: 2em;\r\n  font-weight: bold;\r\n`;\r\nconst H1 = styled.div`\r\n  font-size: 2.5em;\r\n  font-weight: bold;\r\n`;\r\nconst TitleText = styled.p`\r\n  color: #e2e2e2;\r\n`;\r\nconst TitleBox = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  flex-wrap: wrap;\r\n`;\r\nconst GrayBox = styled.div`\r\n  background-color: #e2e2e2;\r\n  margin-left: 2em;\r\n  margin-right: 2em;\r\n  margin-top: 3em;\r\n  margin-bottom: 3em;\r\n  padding: 1em 4em;\r\n  border-radius: 1em;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  color: black;\r\n`;\r\nconst LogoForm = styled.div`\r\n  position: absolute;\r\n  transform: translate(-1em, -4em);\r\n`;\r\nconst RelativeBox = styled.div`\r\n  position: relative;\r\n  width: 7em;\r\n`;\r\n\r\nconst TechTitle = styled.b`\r\n  font-size: 1.5em;\r\n  font-weight: bold;\r\n`;\r\nconst TechForm = styled.div`\r\n  display: flex;\r\n  margin-right: 20 px;\r\n  margin-bottom: 20 px;\r\n  flex-direction: column;\r\n  align-items: stretch;\r\n`;\r\n\r\nconst TechImg = styled.img`\r\n  width: 100%;\r\n  max-height: 7em;\r\n`;\r\nconst TechImgTem = styled.div`\r\n  width: 100%;\r\n  max-height: 7em;\r\n`;\r\n\r\nconst TechText = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst ContentForm = styled.div`\r\n  display: flex;\r\n  margin-right: 20 px;\r\n  margin-bottom: 20 px;\r\n  flex-direction: column;\r\n  align-items: stretch;\r\n  height: 30em;\r\n  padding: 3em;\r\n`;\r\n\r\nconst ContentTitle = styled.div`\r\n  font-size: 2em;\r\n`;\r\n\r\nconst ContentSub = styled.div`\r\n  background-color: #b7a9ff;\r\n  height: 100%;\r\n  border-radius: 1em;\r\n  padding: 2em;\r\n`;\r\n\r\ntype tech = {\r\n  img: string;\r\n  text: string;\r\n  authorship: string;\r\n}[];\r\n\r\ntype content = {\r\n  title: string;\r\n  sub: string;\r\n}[];\r\n\r\nfunction Home() {\r\n  const techList: tech = [\r\n    {\r\n      img: 'redux.png',\r\n      text: 'redux',\r\n      authorship:\r\n        'https://www.google.com/imgres?imgurl=https%3A%2F%2Fmedia.vlpt.us%2Fimages%2Fraejoonee%2Fpost%2F32d60e88-148d-4398-a218-f645bc220bff%2Fimg.png&imgrefurl=https%3A%2F%2Fvelog.io%2F%40raejoonee%2FcreateAsyncThunk&tbnid=8_pa9AGynWM03M&vet=12ahUKEwixlKGgkfrzAhXN4mEKHdiKAsoQMygAegUIARCyAQ..i&docid=n4br-NumUlz8hM&w=1200&h=600&q=redux&ved=2ahUKEwixlKGgkfrzAhXN4mEKHdiKAsoQMygAegUIARCyAQ',\r\n    },\r\n    {\r\n      img: 'saga.png',\r\n      text: 'redux-saga',\r\n      authorship:\r\n        'https://www.google.com/imgres?imgurl=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbeIpPa%2FbtqDlOIUW54%2FNUEumie8saM9aWmlkIg0n1%2Fimg.png&imgrefurl=https%3A%2F%2Fim-developer.tistory.com%2F195&tbnid=F9ORXecQDgBunM&vet=12ahUKEwiylKPEkfrzAhVKd94KHSh6CSIQMygBegUIARC3AQ..i&docid=sG5yWfhvHAgnUM&w=800&h=167&q=redux-saga&ved=2ahUKEwiylKPEkfrzAhVKd94KHSh6CSIQMygBegUIARC3AQ',\r\n    },\r\n    {\r\n      img: '115.png',\r\n      text: '외부 맵 API',\r\n      authorship:\r\n        'https://www.google.com/imgres?imgurl=https%3A%2F%2Fmedia.vlpt.us%2Fimages%2Fchy0428%2Fpost%2Fc06a62d2-f370-442a-813f-48733487c19d%2Fogtag.png&imgrefurl=https%3A%2F%2Fvelog.io%2F%40chy0428%2Fkakaomap-Background&tbnid=HbNQn28885PQgM&vet=12ahUKEwiGvIXTkfrzAhVXD94KHU9vD5wQMygCegUIARCzAQ..i&docid=AoyYndhfc7gw9M&w=800&h=418&q=kakaomap&ved=2ahUKEwiGvIXTkfrzAhVXD94KHU9vD5wQMygCegUIARCzAQ',\r\n    },\r\n  ];\r\n  const contentList: content = [\r\n    {\r\n      title: '1111',\r\n      sub: '1111',\r\n    },\r\n    {\r\n      title: '2222',\r\n      sub: '2222',\r\n    },\r\n    {\r\n      title: '3333',\r\n      sub: '3333',\r\n    },\r\n    {\r\n      title: '4444',\r\n      sub: '4444',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col md={12}>\r\n          <Title>\r\n            <Container fluid=\"md\">\r\n              <TitleBox>\r\n                <H2>실력있는 웹 개발자는&nbsp;</H2> <H1>페이지로&nbsp;</H1>\r\n                <H2>말한다!</H2>\r\n              </TitleBox>\r\n              <br></br>\r\n              <TitleText>\r\n                &nbsp;&nbsp;개발자 \"박성무\"만의 사이트를 만들어 말로 설명하지\r\n                않아도 설득력이 있는 개발자가 되기 위해 경력기술서 사이트를\r\n                제작하였습니다.\r\n              </TitleText>\r\n            </Container>\r\n          </Title>\r\n        </Col>\r\n      </Row>\r\n      <Container fluid=\"md\">\r\n        <Row>\r\n          <Col md={12}>\r\n            <GrayBox>\r\n              <strong>현재 페이지는 react를 사용하여 만들어졌습니다.</strong>\r\n              <RelativeBox>\r\n                <LogoForm>\r\n                  <img src={logosvg} className=\"App-logo\" alt=\"logo\" />\r\n                </LogoForm>\r\n              </RelativeBox>\r\n            </GrayBox>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col md={12}>\r\n            <TechTitle>현재 박성무의 사용기술</TechTitle>\r\n          </Col>\r\n          {techList.map((data, i) => (\r\n            <Col md={4} key={i}>\r\n              <TechForm>\r\n                <TechImgTem>\r\n                  <TechImg\r\n                    crossOrigin=\"anonymous\"\r\n                    src={data.img}\r\n                    alt={data.text}\r\n                  ></TechImg>\r\n                </TechImgTem>\r\n                <TechText>\r\n                  {data.text} <a href={data.authorship}>출처</a>\r\n                </TechText>\r\n              </TechForm>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <Row>\r\n          {contentList.map((data, i) => (\r\n            <Col md={6} key={i}>\r\n              <ContentForm>\r\n                <ContentTitle>{data.title}</ContentTitle>\r\n                <ContentSub>{data.sub}</ContentSub>\r\n              </ContentForm>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { TableHeaderType } from './TableForm';\r\n\r\n// import { VariableSizeList as List } from 'react-window';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport {\r\n  CellMeasurer,\r\n  CellMeasurerCache,\r\n  List,\r\n  ListRowProps,\r\n  Size,\r\n} from 'react-virtualized';\r\n\r\ntype TableProps = {\r\n  renderList: any[];\r\n  hedearList: TableHeaderType[];\r\n  getList: string;\r\n};\r\n\r\n// type CellProps = {\r\n//   index: number;\r\n//   style: object;\r\n// };\r\n// type scrollAction = {\r\n//   scrollDirection: 'forward' | 'backward';\r\n//   scrollOffset: number;\r\n//   scrollUpdateWasRequested: boolean;\r\n// };\r\n\r\nconst TableTr = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: stretch;\r\n  background-color: white;\r\n  color: black;\r\n  font-weight: bold;\r\n  &:hover {\r\n    background-color: aliceblue;\r\n  }\r\n`;\r\n\r\nconst TableTrOdd = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: stretch;\r\n  background-color: #e0e0e0;\r\n  color: black;\r\n  font-weight: bold;\r\n  &:hover {\r\n    background-color: aliceblue;\r\n  }\r\n`;\r\n\r\nconst TableTd = styled.div`\r\n  border: 1px outset gray;\r\n  border-collapse: collapse;\r\n  padding: 5px;\r\n`;\r\nconst cache = new CellMeasurerCache({\r\n  defaultWidth: 100,\r\n  fixedWidth: true,\r\n});\r\nconst TableBody = (props: TableProps) => {\r\n  const { renderList, hedearList } = props;\r\n  const listRef = useRef<List | null>(null);\r\n  const Column = ({ index, key, parent, style }: ListRowProps) => {\r\n    const rowData = renderList[index];\r\n\r\n    return (\r\n      <CellMeasurer\r\n        cache={cache}\r\n        parent={parent}\r\n        key={key}\r\n        columnIndex={0}\r\n        rowIndex={index}\r\n      >\r\n        {index % 2 === 0 ? (\r\n          <TableTr style={style}>\r\n            {hedearList.map((data, i) => {\r\n              return (\r\n                <TableTd key={i} style={{ width: `${data.size}%` }}>\r\n                  {rowData[data.key]}\r\n                </TableTd>\r\n              );\r\n            })}\r\n          </TableTr>\r\n        ) : (\r\n          <TableTrOdd style={style}>\r\n            {hedearList.map((data, i) => {\r\n              return (\r\n                <TableTd key={i} style={{ width: `${data.size}%` }}>\r\n                  {rowData[data.key]}\r\n                </TableTd>\r\n              );\r\n            })}\r\n          </TableTrOdd>\r\n        )}\r\n      </CellMeasurer>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: 1000, overflow: 'auto' }}>\r\n      {/* <WindowScroller>\r\n        {({ height, scrollTop, isScrolling, onChildScroll }) => ( */}\r\n      <AutoSizer>\r\n        {({ width, height }: Size) => {\r\n          return (\r\n            <List\r\n              ref={listRef}\r\n              height={height}\r\n              width={width}\r\n              // isScrolling={isScrolling}\r\n              overscanRowCount={0}\r\n              // onScroll={onChildScroll}\r\n              // scrollTop={scrollTop}\r\n              rowCount={renderList.length}\r\n              rowHeight={cache.rowHeight}\r\n              rowRenderer={Column}\r\n              deferredMeasurementCache={cache}\r\n            ></List>\r\n          );\r\n        }}\r\n      </AutoSizer>\r\n      {/* )}\r\n       </WindowScroller> */}\r\n    </div>\r\n  );\r\n};\r\nexport default TableBody;\r\n","import { TableHeaderType } from './TableForm';\r\n\r\ntype FilterProps = {\r\n  name: string;\r\n  hedearList: TableHeaderType[];\r\n};\r\n\r\nfunction TableFilter(props: FilterProps) {\r\n  return <div></div>;\r\n}\r\nexport default TableFilter;\r\n","import { TableHeaderType } from './TableForm';\r\n\r\ntype HeaderProps = {\r\n  hedearList: TableHeaderType[];\r\n};\r\n\r\nfunction TableHeader(props: HeaderProps) {\r\n  return <div></div>;\r\n}\r\nexport default TableHeader;\r\n","import TableBody from './TableBody';\r\nimport TableFilter from './TableFilter';\r\nimport TableHeader from './TableHeader';\r\n\r\ntype TableProps = {\r\n  renderList: any[];\r\n  hedearList: TableHeaderType[];\r\n  name: string;\r\n  getList: string;\r\n};\r\nexport type TableHeaderType = {\r\n  name: string;\r\n  key: string;\r\n  custom: boolean;\r\n  filterType: string;\r\n  size: number;\r\n  customFuncName?: string;\r\n};\r\nfunction TableForm(props: TableProps) {\r\n  const { hedearList, name, renderList, getList } = props;\r\n  return (\r\n    <div>\r\n      <TableFilter hedearList={hedearList} name={name}></TableFilter>\r\n      <TableHeader hedearList={hedearList}></TableHeader>\r\n      <TableBody\r\n        renderList={renderList}\r\n        hedearList={hedearList}\r\n        getList={getList}\r\n      ></TableBody>\r\n    </div>\r\n  );\r\n}\r\nexport default TableForm;\r\n","import { useCallback } from 'react';\r\nimport { Col, Row, Container } from 'react-bootstrap';\r\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\r\nimport TableForm, { TableHeaderType } from '../layout/Table/TableForm';\r\n\r\nfunction CoronaMap() {\r\n  const corona = useAppSelector((state) => state.corona.corona);\r\n  const index = useAppSelector((state) => state.corona.index);\r\n  const coronaHeader: TableHeaderType[] = [\r\n    {\r\n      key: 'CORONA19_DATE',\r\n      name: '확진일',\r\n      size: 10,\r\n      filterType: 'date',\r\n      custom: false,\r\n    },\r\n    {\r\n      key: 'CORONA19_NO',\r\n      name: '환자번호',\r\n      size: 5,\r\n      filterType: 'number',\r\n      custom: false,\r\n    },\r\n    {\r\n      key: 'CORONA19_COUNTRY',\r\n      name: '국적',\r\n      size: 10,\r\n      filterType: 'string',\r\n      custom: false,\r\n    },\r\n\r\n    {\r\n      key: 'CORONA19_PERSONAL',\r\n      name: '환자정보',\r\n      size: 10,\r\n      filterType: 'string',\r\n      custom: false,\r\n    },\r\n    {\r\n      key: 'CORONA19_AREA',\r\n      name: '지역',\r\n      size: 10,\r\n      filterType: 'string',\r\n      custom: false,\r\n    },\r\n    {\r\n      key: 'CORONA19_TRAVEL_HISTORY',\r\n      name: '여행력',\r\n      size: 10,\r\n      filterType: 'string',\r\n      custom: false,\r\n    },\r\n    {\r\n      key: 'CORONA19_CONTACT_HISTORY',\r\n      name: '접촉력',\r\n      size: 10,\r\n      filterType: 'string',\r\n      custom: false,\r\n    },\r\n    {\r\n      key: 'CORONA19_CORRECTIVE',\r\n      name: '조치사항',\r\n      size: 10,\r\n      filterType: 'string',\r\n      custom: false,\r\n    },\r\n    {\r\n      key: 'CORONA19_LEAVE_STATUS',\r\n      name: '상태',\r\n      size: 5,\r\n      filterType: 'string',\r\n      custom: false,\r\n    },\r\n    {\r\n      key: 'CORONA19_MOVING_PATH',\r\n      name: '이동경로',\r\n      size: 10,\r\n      filterType: 'string',\r\n      custom: false,\r\n    },\r\n    {\r\n      key: 'CORONA19_IDATE',\r\n      name: '등록일',\r\n      size: 10,\r\n      filterType: 'date',\r\n      custom: false,\r\n    },\r\n  ];\r\n  const dispatch = useAppDispatch();\r\n  const handleFormSubmit2 = useCallback(\r\n    (event) => {\r\n      dispatch({\r\n        type: 'GET_CORONA',\r\n        index,\r\n      });\r\n    },\r\n    [dispatch, index],\r\n  );\r\n\r\n  return (\r\n    <Container fluid=\"md\">\r\n      <Row>\r\n        <Col md={12}>\r\n          <button\r\n            onClick={() => {\r\n              console.log(corona);\r\n            }}\r\n          >\r\n            click log\r\n          </button>\r\n\r\n          <button\r\n            onClick={(e) => {\r\n              handleFormSubmit2(e);\r\n            }}\r\n          >\r\n            click log\r\n          </button>\r\n          <TableForm\r\n            hedearList={coronaHeader}\r\n            name=\"corona\"\r\n            renderList={corona}\r\n            getList=\"GET_CORONA\"\r\n          ></TableForm>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CoronaMap;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router';\r\nimport Home from '../components/home/Home';\r\nimport CoronaMap from '../components/skill/CoronaMap';\r\n\r\nconst ControlRoute: React.FC = () => (\r\n  <Switch>\r\n    <Route exact path=\"/\" component={Home} />\r\n    <Route path=\"/skill/1\" component={CoronaMap}></Route>\r\n    <Route path=\"*\" component={Home} />\r\n  </Switch>\r\n);\r\nexport default ControlRoute;\r\n","import { Container } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\n\r\nconst FooterComponent = styled.div`\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  background-color: #212528;\r\n  overflow: hidden;\r\n  color: white;\r\n  padding-top: 3rem;\r\n  padding-bottom: 3rem;\r\n`;\r\nconst FooterTitle = styled.h2`\r\n  font-weight: bolder;\r\n  margin-bottom: 1em;\r\n`;\r\nconst FooterText = styled.div`\r\n  margin-top: 0.5rem;\r\n  color: #e2e2e2;\r\n`;\r\nfunction Footer() {\r\n  return (\r\n    <FooterComponent>\r\n      <Container>\r\n        <FooterTitle>박성무의 경력기술서</FooterTitle>\r\n\r\n        <FooterText>만든 사람 : 박성무</FooterText>\r\n        <FooterText>문의 메일 : tjdanqkr@gmail.com</FooterText>\r\n        <FooterText>거주지 : 서울특별시 신림역 인근</FooterText>\r\n        <FooterText>도와준 사람 : 배은지</FooterText>\r\n      </Container>\r\n    </FooterComponent>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import styled, { ThemeProvider } from 'styled-components';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Headers from './components/layout/Headers';\r\nimport { darktheme, lighttheme } from './style/theme';\r\nimport GlobalStyle from './style/global-style';\r\nimport { useAppSelector } from './store/hooks';\r\nimport ControlRoute from './router';\r\nimport Footer from './components/layout/Footer';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './App.css';\r\nconst MyContainer = styled.div`\r\n  background-color: ${(props) => props.theme.mainBackground};\r\n  color: ${(props) => props.theme.color};\r\n  position: relative;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\nconst Main = styled.div`\r\n  min-height: 100%;\r\n  margin-bottom: 2em;\r\n`;\r\n\r\nfunction App() {\r\n  const mode = useAppSelector((state) => state.theme.mode);\r\n  return (\r\n    <ThemeProvider theme={mode === 'dark' ? darktheme : lighttheme}>\r\n      <GlobalStyle />\r\n      <MyContainer>\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n          <header>\r\n            <Headers></Headers>\r\n          </header>\r\n          <main>\r\n            <Main>\r\n              <ControlRoute></ControlRoute>\r\n            </Main>\r\n          </main>\r\n          <footer>\r\n            <Footer></Footer>\r\n          </footer>\r\n        </BrowserRouter>\r\n      </MyContainer>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://tjdanqkr.kro.kr';\r\n\r\nconst coronaApi = async (start = 1000) => {\r\n  const res = await axios.get(`/corona/${start}/`);\r\n  return res;\r\n};\r\nexport default coronaApi;\r\n","import { AxiosResponse } from 'axios';\r\nimport { put, takeEvery, call } from 'redux-saga/effects';\r\nimport coronaApi from '../../api/corona';\r\nimport { coronaDataType } from '.';\r\n\r\ntype coronaResType = {\r\n  Corona19Status: SuccessType;\r\n};\r\ntype SuccessType = {\r\n  list_total_count: number;\r\n  RESULT: {\r\n    CODE: string;\r\n    MESSAGE: string;\r\n  };\r\n  row: coronaDataType[];\r\n};\r\ntype actionType = {\r\n  index: number;\r\n  type: string;\r\n};\r\n\r\nfunction* callCoronaApi(action: actionType) {\r\n  try {\r\n    const corona: AxiosResponse<coronaResType> = yield call(\r\n      coronaApi,\r\n      action.index,\r\n    );\r\n\r\n    yield put({\r\n      type: 'corona/SUSSESS_CORONA',\r\n      payload: corona.data.Corona19Status.row,\r\n    });\r\n  } catch (e) {\r\n    if (e instanceof Error) {\r\n      yield put({\r\n        type: 'corona/FAIL_CORONA',\r\n        payload: e.message,\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport function* getCoronaApi() {\r\n  yield takeEvery('GET_CORONA', callCoronaApi);\r\n}\r\n","import { all } from '@redux-saga/core/effects';\r\nimport { getCoronaApi } from '../corona/coronaSaga';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([getCoronaApi()]);\r\n}\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport type { RootState } from '..';\r\n\r\n// Define a type for the slice state\r\nexport interface coronaDataType {\r\n  CORONA19_AREA: string;\r\n  CORONA19_CONTACT_HISTORY: string;\r\n  CORONA19_CORRECTIVE: string;\r\n  CORONA19_COUNTRY: string;\r\n  CORONA19_DATE: string;\r\n  CORONA19_ID: string;\r\n  CORONA19_IDATE: string;\r\n  CORONA19_LEAVE_STATUS: string;\r\n  CORONA19_MOVING_PATH: string;\r\n  CORONA19_NO: string;\r\n  CORONA19_PERSONAL: string;\r\n  CORONA19_TRAVEL_HISTORY: string;\r\n}\r\ntype IState = {\r\n  corona: coronaDataType[];\r\n  message: string;\r\n  index: number;\r\n};\r\n// Define the initial state using that type\r\nconst initialState: IState = {\r\n  corona: [],\r\n  message: '',\r\n  index: 1,\r\n};\r\n\r\ninterface IError {\r\n  message: string;\r\n}\r\n\r\nexport const corona = createSlice({\r\n  name: 'corona',\r\n  initialState,\r\n  reducers: {\r\n    SUSSESS_CORONA: (state, action: PayloadAction<coronaDataType[]>) => {\r\n      const concatList = state.corona.concat(action.payload);\r\n      state.corona = concatList;\r\n      state.index = state.index + 1000;\r\n    },\r\n    FAIL_CORONA: (state, action: PayloadAction<IError>) => {\r\n      state.message = action.payload.message;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { SUSSESS_CORONA, FAIL_CORONA } = corona.actions;\r\n\r\n// Other code such as selectors can use the imported `RootState` type\r\nexport const selectCoronaMembers = (state: RootState) => state.corona;\r\n\r\nexport default corona.reducer;\r\n","import createSagaMiddleware from '@redux-saga/core';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport rootSaga from './saga';\r\nimport themeMode from './themeMode';\r\nimport userLog from './corona';\r\nconst isDev = process.env.NODE_ENV !== 'production';\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst createStore = () => {\r\n  const store = configureStore({\r\n    reducer: {\r\n      theme: themeMode,\r\n      corona: userLog,\r\n    },\r\n    devTools: isDev,\r\n    middleware: [sagaMiddleware],\r\n  });\r\n  sagaMiddleware.run(rootSaga);\r\n  return store;\r\n};\r\nexport const store = createStore();\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}