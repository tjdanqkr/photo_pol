{"version":3,"sources":["store/hooks.ts","store/themeMode/index.ts","components/layout/Headers.tsx","style/theme.ts","style/global-style.ts","img/logo.svg","store/toggle/index.ts","components/home/Home.tsx","components/self-introduce/Self-Introduce.tsx","components/layout/Table/TableHeader.tsx","components/layout/Table/TableBody.tsx","components/layout/Table/TableFilter.tsx","components/layout/Table/TableForm.tsx","components/skill/Corona/CoronaMap.tsx","store/lotto/index.ts","components/skill/Lotto/LottoQr.tsx","components/skill/Lotto/LottoMyNumber.tsx","components/skill/Lotto/LottoAnalyze.tsx","components/skill/Lotto/LottoRecommend.tsx","components/skill/Lotto/LottoTemplate.tsx","router/index.tsx","components/layout/Footer.tsx","App.tsx","reportWebVitals.ts","api/corona.ts","store/corona/coronaSaga.ts","store/saga/index.ts","store/corona/index.ts","store/index.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","initialState","mode","localStorage","getItem","themeSlice","createSlice","name","reducers","darkMode","state","setItem","lightMode","actions","HeaderForm","styled","div","Headers","theme","dispatch","Navbar","collapseOnSelect","expand","bg","variant","sticky","Container","style","fontWeight","Brand","as","Link","to","Toggle","Collapse","id","Nav","className","NavDropdown","title","Item","Button","onClick","darktheme","mainBackground","color","primaryText","secondaryText","disable","border","divider","background","tableHeader","oddBackground","response","lighttheme","GlobalStyle","createGlobalStyle","toggleSlice","img","alt","open","content","onClickToggle","action","payload","Title","H2","H1","TitleText","p","TitleBox","GrayBox","LogoForm","RelativeBox","TechTitle","b","ContentForm","ContentTitle","ContentSub","ToggleArrow","ToggleItemTemplate","ToggleScroll","ToggleItem","Home","toggle","Row","Col","md","fluid","src","logosvg","map","data","i","process","width","height","con","textAlign","length","sub","textDecoration","h3","SubTitle","h5","MyIntoroduce","subTitle","SelfIntroduce","Card","Header","Body","TableTr","TableTd","TableHeader","props","hedearList","size","TableTrOdd","TableBodyForm","cache","CellMeasurerCache","defaultWidth","fixedWidth","TableBody","renderList","listRef","useRef","Column","index","key","parent","rowData","columnIndex","rowIndex","onScroll","e","target","scrollTop","scrollLeft","Grid","current","handleScrollEvent","handleScroll","autoHide","ref","overscanRowCount","rowCount","rowHeight","rowRenderer","deferredMeasurementCache","containerStyle","overflow","TableFilter","TableForm","getList","CoronaMap","corona","getCorona","useCallback","type","useEffect","filterType","custom","lottoSlice","lottoList","suggestion","statisticsNumDesc","statisticsAppDesc","activeKey","camera","toast","recommendList","top5List","notExistList","LOTTOADD","myLottoList","obj","round","url","push","LOTTOREMOVE","newActiveKey","filter","splice","LOTTOANALYZE","statisticsList","forEach","list","flat","num","findI","findIndex","statistics","appearance","NumDesc","sort","a","AppDesc","makeTop5List","makeNotExistList","LOTTOACTIVEKEY","LOTTOCAMERA","LOTTOTOASTCLOSE","LOTTORECOMMEND","check","checkList","topRandomNumber","makeTopRandomNumber","existRandomNumber","makeExistRandomNumber","notExistRandomNumber","makeNotExistRandomNumber","randomNumber1","makeRandomNumber","randomNumber2","filterdata","JSON","stringify","some","countAppearance","countNum","initLottoNumArr","Array","fill","existArr","Idata","Edata","listLength","useUnit","Math","floor","random","pass","arrs","choiseNumber","randomPopNumber","deduplicationFunc","testList","myLotto","LottoQr","lotto","useState","domain","setDomain","count","setCount","handleScan","scanResult","test","setRedux","queryData","split","Number","numberList","slice","myNumberListFunc","myNumberList","console","error","Numbers","substr","Toast","onClose","show","delay","autohide","onError","err","onScan","Accordion","AccordionForm","AccordionBody","AccordionRemoveButton","AccordionHeader","unselectable","AccordionHeaderButton","button","LottoMyNumber","undefined","find","Table","striped","bordered","hover","numbers","number","BoxForm","LottoAnalyze","setNumberList","setNumberListFuntion","List","findObj","ButtonBox","Rotate","LottoRecommend","onClickRecommend","j","Box","LottoQrTemplate","ControlRoute","exact","path","FooterComponent","FooterTitle","h2","FooterText","Footer","MyContainer","Main","App","basename","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","axios","defaults","baseURL","coronaApi","start","get","res","callCoronaApi","getCoronaApi","call","put","Error","message","takeEvery","rootSaga","all","maxLength","SUSSESS_CORONA","concatList","concat","FAIL_CORONA","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","themeMode","devTools","middleware","run","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3690d935.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from './';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport type { RootState } from '../../store';\r\n\r\n// Define a type for the slice state\r\ninterface ThemeState {\r\n  mode: 'dark' | 'light';\r\n}\r\n\r\n// Define the initial state using that type\r\nconst initialState: ThemeState = {\r\n  mode: localStorage.getItem('mode') === 'dark' ? 'dark' : 'light',\r\n};\r\n\r\nexport const themeSlice = createSlice({\r\n  name: 'theme',\r\n  initialState,\r\n  reducers: {\r\n    darkMode: (state) => {\r\n      localStorage.setItem('mode', 'dark');\r\n      state.mode = 'dark';\r\n    },\r\n    lightMode: (state) => {\r\n      localStorage.setItem('mode', 'light');\r\n      state.mode = 'light';\r\n    },\r\n  },\r\n});\r\n\r\nexport const { darkMode, lightMode } = themeSlice.actions;\r\n\r\n// Other code such as selectors can use the imported `RootState` type\r\nexport const selectTheme = (state: RootState) => state.theme.mode;\r\n\r\nexport default themeSlice.reducer;\r\n","import { Container, Nav, Navbar, NavDropdown, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\r\nimport { darkMode, lightMode } from '../../store/themeMode';\r\nconst HeaderForm = styled.div`\r\n  font-weight: bolder;\r\n`;\r\nfunction Headers() {\r\n  const mode = useAppSelector((state) => state.theme.mode);\r\n  const dispatch = useAppDispatch();\r\n  return (\r\n    <HeaderForm>\r\n      <Navbar\r\n        collapseOnSelect\r\n        expand=\"md\"\r\n        bg={mode}\r\n        variant={mode}\r\n        sticky=\"top\"\r\n      >\r\n        <Container style={{ fontWeight: 'bolder' }}>\r\n          <Navbar.Brand as={Link} to=\"/\">\r\n            <h2>\r\n              <b>박성무의 경력기술서</b>\r\n            </h2>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"me-auto\">\r\n              <Nav.Link as={Link} to=\"/userlog\">\r\n                <strong>profile</strong>\r\n              </Nav.Link>\r\n\r\n              <Nav.Link as={Link} to=\"/userlog\"></Nav.Link>\r\n              <NavDropdown title=\"skill\" id=\"collasible-nav-dropdown\">\r\n                <NavDropdown.Item as={Link} to=\"/skill/1\">\r\n                  corona\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item as={Link} to=\"/skill/2\">\r\n                  Lotto\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n              <Nav.Link as={Link} to=\"/selfintroduce\">\r\n                <strong>self-introduction</strong>\r\n              </Nav.Link>\r\n              {/* <Nav.Link as={Link} to=\"/userlog\">\r\n                <strong>etc</strong>\r\n              </Nav.Link> */}\r\n              {/* <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.2\">\r\n                Another action\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item href=\"#action/3.4\">\r\n                Separated link\r\n              </NavDropdown.Item>\r\n            </NavDropdown> */}\r\n            </Nav>\r\n            <Nav>\r\n              <Button\r\n                variant={mode === 'dark' ? 'secondary' : 'dark'}\r\n                onClick={() => {\r\n                  mode === 'dark'\r\n                    ? dispatch(lightMode())\r\n                    : dispatch(darkMode());\r\n                }}\r\n              >\r\n                {mode === 'dark' ? 'light' : 'dark'}\r\n              </Button>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </HeaderForm>\r\n  );\r\n}\r\n\r\nexport default Headers;\r\n","import { DefaultTheme } from 'styled-components';\r\n\r\nconst darktheme: DefaultTheme = {\r\n  mainBackground: `#333`,\r\n\r\n  color: `rgba(255,255,255,0.85)`,\r\n  title: `rgba(255,255,255,0.85)`,\r\n  primaryText: `rgba(255,255,255,0.65)`,\r\n  secondaryText: `rgba(255,255,255,0.45)`,\r\n  disable: `rgba(255,255,255,0.25)`,\r\n  border: `rgba(255,255,255,0.15)`,\r\n  divider: `rgba(255,255,255,0.06)`,\r\n  background: `rgba(255,255,255,0.04)`,\r\n  tableHeader: `rgba(255,255,255,0.02)`,\r\n  oddBackground: `rgba(0, 0, 0, 0.85)`,\r\n  response: {},\r\n};\r\n\r\nconst lighttheme: DefaultTheme = {\r\n  mainBackground: `#fff`,\r\n\r\n  color: `rgba(0, 0, 0, 0.85)`,\r\n  title: `rgba(0, 0, 0, 0.85)`,\r\n  primaryText: `rgba(0, 0, 0, 0.75)`,\r\n  secondaryText: `rgba(0, 0, 0, 0.45)`,\r\n  disable: `rgba(0, 0, 0, 0.25)`,\r\n  border: `rgba(0, 0, 0, 0.15)`,\r\n  divider: `rgba(0, 0, 0, 0.06)`,\r\n  background: `rgba(0, 0, 0, 0.04)`,\r\n  tableHeader: `rgba(0, 0, 0, 0.02)`,\r\n  oddBackground: `rgba(255,255,255,0.85)`,\r\n\r\n  response: {},\r\n};\r\n\r\nexport { darktheme, lighttheme };\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n  html,\r\n  body {\r\n    height: 100%;\r\n  }\r\n\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport type { RootState } from \"../../store\";\r\n\r\nconst initialState = [\r\n  {\r\n    img: \"img/toggleImg/db.png\",\r\n    alt: \"DB\",\r\n    open: false,\r\n    content: [\r\n      {\r\n        img: \"/img/ProfilesIcons/DB/mongoDB.png\",\r\n        alt: \"MongoDB\",\r\n      },\r\n      {\r\n        img: \"/img/ProfilesIcons/DB/MySQL-Logo.png\",\r\n        alt: \"MySQL\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    img: \"img/toggleImg/windows.png\",\r\n    alt: \"OS\",\r\n    open: false,\r\n    content: [\r\n      {\r\n        img: \"img/ProfilesIcons/OS/Windows_logo.png\",\r\n        alt: \"Windows\",\r\n      },\r\n      {\r\n        img: \"img/ProfilesIcons/OS/linux_logo.png\",\r\n        alt: \"Linux\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    img: \"img/toggleImg/programing.png\",\r\n    alt: \"언어\",\r\n    open: false,\r\n    content: [\r\n      {\r\n        img: \"img/ProfilesIcons/lang/JavaScript.png\",\r\n        alt: \"JavaScript\",\r\n      },\r\n      {\r\n        img: \"img/ProfilesIcons/lang/ts.png\",\r\n        alt: \"TypeScript\",\r\n      },\r\n      {\r\n        img: \"img/ProfilesIcons/lang/Java_Logo.png\",\r\n        alt: \"Java\",\r\n      },\r\n      {\r\n        img: \"img/ProfilesIcons/lang/python-logo.png\",\r\n        alt: \"Python\",\r\n      },\r\n      {\r\n        img: \"img/ProfilesIcons/lang/css.png\",\r\n        alt: \"Css\",\r\n      },\r\n      {\r\n        img: \"img/ProfilesIcons/lang/HTML5.png\",\r\n        alt: \"HTML5\",\r\n      },\r\n\r\n      {\r\n        img: \"img/ProfilesIcons/lang/Expressjs.png\",\r\n        alt: \"Express\",\r\n      },\r\n      {\r\n        img: \"img/ProfilesIcons/lang/react.png\",\r\n        alt: \"React\",\r\n      },\r\n      {\r\n        img: \"img/ProfilesIcons/lang/nextjs.png\",\r\n        alt: \"Next\",\r\n      },\r\n      {\r\n        img: \"img/ProfilesIcons/lang/Spring_Framework_Logo.png\",\r\n        alt: \"Spring\",\r\n      },\r\n      {\r\n        img: \"img/ProfilesIcons/lang/Vert.x_Logo.png\",\r\n        alt: \"Vert.x\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    img: \"img/toggleImg/agile.png\",\r\n    alt: \"기타\",\r\n    open: false,\r\n    content: [\r\n      {\r\n        img: \"img/ProfilesIcons/Etc/bootstrap.jpg\",\r\n        alt: \"Bootstrap\",\r\n      },\r\n      {\r\n        img: \"img/ProfilesIcons/Etc/git_and_github_logo.png\",\r\n        alt: \"Git\",\r\n      },\r\n      {\r\n        img: \"img/ProfilesIcons/Etc/kakao_map_api.jpg\",\r\n        alt: \"KakaoMapApi\",\r\n      },\r\n      {\r\n        img: \"img/ProfilesIcons/Etc/navermapApi.png\",\r\n        alt: \"NaverMapApi\",\r\n      },\r\n      {\r\n        img: \"img/ProfilesIcons/Etc/Redux_Logo.png\",\r\n        alt: \"Redux\",\r\n      },\r\n      {\r\n        img: \"img/ProfilesIcons/Etc/redux-toolkit.png\",\r\n        alt: \"ReduxToolkit\",\r\n      },\r\n      {\r\n        img: \"img/ProfilesIcons/Etc/styled-components.png\",\r\n        alt: \"Styled-components\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const toggleSlice = createSlice({\r\n  name: \"toggle\",\r\n  initialState,\r\n  reducers: {\r\n    onClickToggle: (state, action) => {\r\n      state[action.payload].open = !state[action.payload].open;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { onClickToggle } = toggleSlice.actions;\r\n\r\n// Other code such as selectors can use the imported `RootState` type\r\nexport const selectTheme = (state: RootState) => state.toggle;\r\n\r\nexport default toggleSlice.reducer;\r\n","import { Col, Row, Container } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport logosvg from '../../img/logo.svg';\r\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\r\nimport { onClickToggle } from '../../store/toggle';\r\nimport './Home.css';\r\nconst Title = styled.div`\r\n  background-color: #212529;\r\n  color: white;\r\n  padding-top: 3em;\r\n  padding-bottom: 3em;\r\n`;\r\nconst H2 = styled.div`\r\n  font-size: 2em;\r\n  font-weight: bold;\r\n`;\r\nconst H1 = styled.div`\r\n  font-size: 2.5em;\r\n  font-weight: bold;\r\n`;\r\nconst TitleText = styled.p`\r\n  color: #e2e2e2;\r\n`;\r\nconst TitleBox = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  flex-wrap: wrap;\r\n  padding-top: 2em;\r\n`;\r\nconst GrayBox = styled.div`\r\n  background-color: #e2e2e2;\r\n  margin-left: 2em;\r\n  margin-right: 2em;\r\n  margin-top: 3em;\r\n  margin-bottom: 3em;\r\n  padding: 1em 4em;\r\n  border-radius: 1em;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  color: black;\r\n`;\r\nconst LogoForm = styled.div`\r\n  position: absolute;\r\n  transform: translate(-1em, -4em);\r\n`;\r\nconst RelativeBox = styled.div`\r\n  position: relative;\r\n  width: 7em;\r\n`;\r\n\r\nconst TechTitle = styled.b`\r\n  font-size: 1.5em;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst ContentForm = styled.div`\r\n  display: flex;\r\n  margin-right: 20 px;\r\n  margin-bottom: 20 px;\r\n  flex-direction: column;\r\n  align-items: stretch;\r\n  height: 30em;\r\n  padding: 3em;\r\n`;\r\n\r\nconst ContentTitle = styled.div`\r\n  font-size: 2em;\r\n`;\r\n\r\nconst ContentSub = styled.div`\r\n  background-color: #b7a9ff;\r\n  height: 100%;\r\n  border-radius: 1em;\r\n  padding: 2em;\r\n`;\r\nconst ToggleArrow = styled.div`\r\n  height: 12px;\r\n  width: 12px;\r\n  transition: all ease 1s;\r\n`;\r\n\r\nconst ToggleItemTemplate = styled.div`\r\n  border-radius: 0 0 2em 2em;\r\n  background-color: #bfbfbf;\r\n  margin: 20px;\r\n  position: relative;\r\n  min-height: 15em;\r\n  max-height: 25em;\r\n  color: black;\r\n  transform: translate(0, -3em);\r\n  z-index: 0;\r\n\r\n  padding: 2em;\r\n  padding-top: 3em;\r\n`;\r\nconst ToggleScroll = styled.div`\r\n  overflow-y: scroll;\r\n  max-height: 15em;\r\n  &::-webkit-scrollbar {\r\n    /* 스크롤바 막대 너비 설정 */\r\n    width: 6px;\r\n  } /* 스크롤바 막대 설정*/\r\n  &::-webkit-scrollbar-thumb {\r\n    /* 스크롤바 막대 높이 설정 */\r\n    height: 17%;\r\n    background-color: #7d7d7d; /* 스크롤바 둥글게 설정 */\r\n    border-radius: 10px;\r\n  } /* 스크롤바 뒷 배경 설정*/\r\n  &::-webkit-scrollbar-track {\r\n    background-color: rgba(0, 0, 0, 0);\r\n  }\r\n`;\r\nconst ToggleItem = styled.div`\r\n  color: black;\r\n  text-align: center;\r\n`;\r\n\r\ntype content = {\r\n  title: string;\r\n  sub: string;\r\n  to: string;\r\n}[];\r\n\r\nfunction Home() {\r\n  const toggle = useAppSelector((state) => state.toggle);\r\n  const dispatch = useAppDispatch();\r\n  const contentList: content = [\r\n    {\r\n      title: 'Corona',\r\n      sub: '서울 코로나 api(현재는 사라짐)를 활용하여 대용량 데이터를 저장 및 가져오는 기능',\r\n      to: 'skill/1',\r\n    },\r\n    {\r\n      title: 'Lotto',\r\n      sub: '취미로 하는 로또를 사용해 혼자의 분석 방법으로 만든 프로그램',\r\n      to: 'skill/2',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <Row>\r\n          <Col md={12}>\r\n            <Title>\r\n              <Container fluid=\"md\">\r\n                <TitleBox>\r\n                  <H2>실력있는 웹 개발자는&nbsp;</H2> <H1>페이지로&nbsp;</H1>\r\n                  <H2>말한다!</H2>\r\n                </TitleBox>\r\n                <br></br>\r\n                <TitleText>\r\n                  &nbsp;&nbsp;개발자 \"박성무\"만의 사이트를 만들어 말로 설명하지\r\n                  않아도 설득력이 있는 개발자가 되기 위해 경력기술서 사이트를\r\n                  제작하였습니다.\r\n                </TitleText>\r\n              </Container>\r\n            </Title>\r\n          </Col>\r\n        </Row>\r\n      </section>\r\n      <Container fluid=\"md\">\r\n        <section>\r\n          <Row>\r\n            <Col md={12}>\r\n              <GrayBox>\r\n                <strong>현재 페이지는 react를 사용하여 만들어졌습니다.</strong>\r\n                <RelativeBox>\r\n                  <LogoForm>\r\n                    <img src={logosvg} className=\"App-logo\" alt=\"logo\" />\r\n                  </LogoForm>\r\n                </RelativeBox>\r\n              </GrayBox>\r\n            </Col>\r\n          </Row>\r\n        </section>\r\n        <section>\r\n          <Row>\r\n            <Col md={1}></Col>\r\n            <Col md={10}>\r\n              <TechTitle>현재 박성무의 사용기술</TechTitle>\r\n            </Col>\r\n            <Col md={1}></Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={1}></Col>\r\n            <Col md={10}>\r\n              <Row>\r\n                {toggle.map((data, i) => (\r\n                  <Col md={6} key={i}>\r\n                    <div\r\n                      className={data.open ? 'ToggleBoxActive' : 'ToggleBox'}\r\n                      onClick={() => dispatch(onClickToggle(i))}\r\n                    >\r\n                      <img\r\n                        src={`${process.env.PUBLIC_URL}/${data.img}`}\r\n                        style={{ width: '100px', height: '100px' }}\r\n                        alt={data.alt}\r\n                      ></img>\r\n                      <h3>\r\n                        <b>{data.alt}</b>\r\n                      </h3>\r\n                      <ToggleArrow>{data.open ? `▲` : `▼`}</ToggleArrow>\r\n                    </div>\r\n                    {data.open ? (\r\n                      <ToggleItemTemplate>\r\n                        <ToggleScroll>\r\n                          {data.content.map((con, i) => (\r\n                            <ToggleItem key={i} style={{ textAlign: 'center' }}>\r\n                              <img\r\n                                src={`${process.env.PUBLIC_URL}/${con.img}`}\r\n                                alt={con.alt}\r\n                                style={{ width: '100%' }}\r\n                              ></img>\r\n                              <b>{`<${con.alt}>`}</b>\r\n                              {data.content.length !== i + 1 ? <hr></hr> : null}\r\n                            </ToggleItem>\r\n                          ))}\r\n                        </ToggleScroll>\r\n                      </ToggleItemTemplate>\r\n                    ) : null}\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            </Col>\r\n            <Col md={1}></Col>\r\n          </Row>\r\n        </section>\r\n        <section>\r\n          <Row>\r\n            {contentList.map((data, i) => (\r\n              <Col md={6} key={i}>\r\n                <ContentForm>\r\n                  <ContentTitle>\r\n                    <Link\r\n                      to={data.to}\r\n                      style={{ textDecoration: 'none', color: 'black' }}\r\n                    >\r\n                      {data.title}\r\n                    </Link>\r\n                  </ContentTitle>\r\n\r\n                  <ContentSub>{data.sub}</ContentSub>\r\n                </ContentForm>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </section>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { Col, Row, Container, Button, Card } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nconst Title = styled.h3``;\r\nconst SubTitle = styled.h5`\r\n  font-weight: bold;\r\n`;\r\n\r\nconst MyIntoroduce = [\r\n  {\r\n    title: '[성장 과정]',\r\n    subTitle: '저는 어렸을 때부터 성장하여 뿌듯함을 얻는 것을 좋아했습니다.',\r\n    content:\r\n      ' 그래서 저는 초등학교 때에도 공부만 하지 않고, 축구나 대외 활동을 했습니다. 그리고 저의 인생의 꽃은 대학교 때 군대를 다녀와서입니다. 저는 학기마다 무엇을 하려 했습니다. 2학년 때는 Auto CAD 2급        자격증을 취득하였고, 3학년 때는 CATIA를 공부하여 CATIA Part Design 자격증을 취득하였습니다. 그리고 4학년 때는 최종 프로젝트 때문에 바빠서 잘하지 못하긴 했지만, JSL인재 교육 개발원에서 하는 일본 IT 취업 교육을 들었습니다. 그 교육을 들으면서 IT를 할 때, 잘할 수 있고, 흥미가 있는 일을 찾았습니다. 컴퓨터를 좋아하는 저에겐 개발자란 너무 매력 있는 직종이었습니다. 그래서 많은 것을 배우고자, JSL 교육이 끝나고도, 쉬지 않고 공부를 하기 위해서 안동대에서 보조강사로 일하며, React 기반 영화 평점 사이트를 개발하였고 현재는 서울 비트 교육센터에서 IOT를 이용한 빅데이터 AI 전문가 과정을 듣고 있습니다. 그리고 프로젝트로는 서울시 상권을 분석하여 창업 시 생존율을 구하는 프로젝트를 하고 있습니다.',\r\n  },\r\n  {\r\n    title: '[경험 및 활동사항]',\r\n    subTitle: '자신의 재능을 200% 발휘하다.',\r\n    content:\r\n      ' 저는 JSL 인재개발원에서 IT 교육을 들으면서 Swing 기능을 사용해 PC방 관리 프로그램을 만들었습니다. 그 과정 중 저는 팀장을 맡게 되어 MySql을 사용을 하여 쿼리 문을 작성하고 백엔드를 관리하여 기능 구현을 하였습니다. 그리고 최종 프로젝트에서는 JSP를 사용하여 MVC 2 패턴으로 쇼핑몰을 만들어 보았습니다. 그 과정에서 저는 백엔드를 담당하였고 디자인 관련 수정 작업을 많이 도와주었습니다. 해당 프로젝트에서는 Git hub을 사용하여 프로젝트 관리를 하였습니다. 저는 프론트 엔드 측에서도 여러 가지 지식을 보유했기 때문에 팀원들의 부족한 부분을 도와주며 프로젝트를 성공적으로 마칠 수 있었습니다. 저는 제가 IT 관련 개발에 재능이 있음을 깨닫고, 해당 인재교육원의 강사님의 추천으로 저는 안동대학교 한국과학기술원에서 머신러닝 교육의 보조 강사를 하게 되어 학생들에게 JAVA와 JSP를 가르쳤습니다. bit교육센터에서는 프론트 엔드로서 서울시 상권을 분석하여 창업 시 TensorFlow를 사용하여 수익률을 구하는 프로젝트를 하였습니다. 해당 교육을 마친 후 현재 재직중인 회사인 스왈라비(주)에 입사하였고, 고객들이 데이터를 볼 수 있고 관리할 수 있는 포탈 사이트와 회사 직원이 쓸 수 있는 어드민 페이지 유지 보수 관리를 맡았습니다. 처음은 프론트 엔드로 입사하게 되었지만, 회사 사정상 서버와 디비까지 맡게되었습니다. 현재 회사와 저의 직책에 대한 책임감을 가지고, 제가 할 수 있는한 최선을 다해 근무하였습니다.',\r\n  },\r\n  {\r\n    title: '[성격 및 장단점]',\r\n    subTitle: '나에게는 “왜 그런 건지.” 남에게는 “그럴 수도 있지.”',\r\n    content:\r\n      ' 저는 스스로 어떤 결과를 도출하기 위해 고민하는 성격입니다. 남의 도움을 받는 것에 거리낌이 있는 것은 아니지만 다른 사람의 도움 역시 제가 스스로 깨닫기 위한 발돋움에 불과합니다. 진정으로 나의 생각, 나의 기술이 되는 것은 스스로 이룩한 결과만이 본인의 것이 된다고 생각합니다. 스스로를 향해 답을 찾아내기 위해 왜 그렇게 되었는지를 끊임없이 고민하고, 결국 한발 더 앞선 스스로를 향해 나아갈 수 있게 됩니다. 때문에 보조강사로 다녔을 때에도 학생들에게 답부터 주지 않고 스스로 생각해볼 수 있는 문제를 내주었습니다. 어려워 하는 학생들에게는 제가 알고 있는 최대한을 발휘하여 함께 문제를 해결해나갔고, 현재까지도 감사해하는 학생들에게 종종 연락이 오곤 합니다. 제가 늘 일하며 남에게 하는 말이 “그럴 수도 있지.” 입니다. 남의 실수나 잘못을 파고들거나 집착하는 성격이 아니라 늘 유순하게 넘겨버려 손해를 보는 일도 많습니다. 그러나 저는 모든 사람이 스스로에게 가장 엄격하다고 생각합니다. 본인의 잘못은 본인이 꾸짖고, 옆에서 한 사람 쯤은 “그럴 수도 있지.” 라고 넘겨주는 역할도 필요하다고 느낍니다. 저의 어머니의 신조가 ‘손해를 보더라도 남에게 해를 끼치지 말자.’ 입니다. 화를 내고 따지고 들어도 이미 일어난 일은 일어난 것이고, 감정적으로 몰아세우기 보다는 합심하여 문제를 해결하는 것이 더 중요하다고 생각합니다.',\r\n  },\r\n  {\r\n    title: '[현재 진행중]',\r\n    // subTitle: '나에게는 “왜 그런 건지.” 남에게는 “그럴 수도 있지.”',\r\n    content:\r\n      ' 현재는 nestjs의 규격화된 라이브러리에 매력에 빠져서 공부하였고 몽고 디비를 활용하여 친누나한테 부탁 받은 사이트 개발을 하고 있습니다.',\r\n  },\r\n];\r\nfunction SelfIntroduce() {\r\n  return (\r\n    <Container fluid=\"md\">\r\n      <Row>\r\n        {MyIntoroduce.map((data) => (\r\n          <Col md={6}>\r\n            <Card>\r\n              <Card.Header>\r\n                <Title>{data.title}</Title>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <SubTitle>{data.subTitle}</SubTitle>\r\n                <p>{data.content}</p>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\nexport default SelfIntroduce;\r\n","import styled from 'styled-components';\r\nimport { TableHeaderType } from './TableForm';\r\n\r\ntype HeaderProps = {\r\n  hedearList: TableHeaderType[];\r\n  width: number;\r\n};\r\n\r\nconst TableTr = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: stretch;\r\n  background-color: white;\r\n  color: black;\r\n  font-weight: bold;\r\n  position: sticky;\r\n`;\r\n\r\nconst TableTd = styled.div`\r\n  border: 1px outset gray;\r\n  border-collapse: collapse;\r\n  padding: 5px;\r\n  font-size: 2em;\r\n`;\r\nfunction TableHeader(props: HeaderProps) {\r\n  const { hedearList, width } = props;\r\n  return (\r\n    <TableTr style={{ width }}>\r\n      {hedearList.map((data, i) => {\r\n        return (\r\n          <TableTd key={i} style={{ width: `${data.size}%` }}>\r\n            {data.name}\r\n          </TableTd>\r\n        );\r\n      })}\r\n    </TableTr>\r\n  );\r\n}\r\nexport default TableHeader;\r\n","import { useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { TableHeaderType } from './TableForm';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport {\r\n  CellMeasurer,\r\n  CellMeasurerCache,\r\n  List,\r\n  ListRowProps,\r\n  Size,\r\n} from 'react-virtualized';\r\nimport TableHeader from './TableHeader';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\ntype TableProps = {\r\n  renderList: any[];\r\n  hedearList: TableHeaderType[];\r\n  getList: string;\r\n};\r\n\r\nconst TableTr = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: stretch;\r\n  background-color: white;\r\n  color: black;\r\n  font-weight: bold;\r\n  &:hover {\r\n    background-color: aliceblue;\r\n  }\r\n`;\r\n\r\nconst TableTrOdd = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: stretch;\r\n  background-color: #e0e0e0;\r\n  color: black;\r\n  font-weight: bold;\r\n  &:hover {\r\n    background-color: aliceblue;\r\n  }\r\n`;\r\n\r\nconst TableTd = styled.div`\r\n  border: 1px outset gray;\r\n  border-collapse: collapse;\r\n  padding: 5px;\r\n`;\r\nconst TableBodyForm = styled.div`\r\n  height: 1000px;\r\n  overflow: hidden;\r\n`;\r\nconst cache = new CellMeasurerCache({\r\n  defaultWidth: 100,\r\n  fixedWidth: true,\r\n});\r\n\r\nconst TableBody = (props: TableProps) => {\r\n  const { renderList, hedearList } = props;\r\n  const listRef = useRef<List | null>(null);\r\n  const handleScroll = (e: any) => {\r\n    const { scrollTop, scrollLeft } = e.target;\r\n    const Grid = listRef.current?.Grid;\r\n    Grid?.handleScrollEvent({ scrollTop, scrollLeft });\r\n  };\r\n\r\n  const Column = ({ index, key, parent, style }: ListRowProps) => {\r\n    const rowData = renderList[index];\r\n\r\n    return (\r\n      <CellMeasurer\r\n        cache={cache}\r\n        parent={parent}\r\n        key={key}\r\n        columnIndex={0}\r\n        rowIndex={index}\r\n      >\r\n        {index % 2 === 0 ? (\r\n          <TableTr style={style}>\r\n            {hedearList.map((data, i) => {\r\n              return (\r\n                <TableTd key={i} style={{ width: `${data.size}%` }}>\r\n                  {rowData[data.key]}\r\n                </TableTd>\r\n              );\r\n            })}\r\n          </TableTr>\r\n        ) : (\r\n          <TableTrOdd style={style}>\r\n            {hedearList.map((data, i) => {\r\n              return (\r\n                <TableTd key={i} style={{ width: `${data.size}%` }}>\r\n                  {rowData[data.key]}\r\n                </TableTd>\r\n              );\r\n            })}\r\n          </TableTrOdd>\r\n        )}\r\n      </CellMeasurer>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <TableBodyForm>\r\n      {/* <WindowScroller>\r\n        {({ height, scrollTop, isScrolling, onChildScroll }) => ( */}\r\n      <AutoSizer>\r\n        {({ width, height }: Size) => {\r\n          return (\r\n            <>\r\n              <TableHeader hedearList={hedearList} width={width}></TableHeader>\r\n              <Scrollbars\r\n                onScroll={(e) => handleScroll(e)}\r\n                style={{ height, width }}\r\n                autoHide\r\n              >\r\n                <List\r\n                  ref={listRef}\r\n                  height={height}\r\n                  width={width}\r\n                  // isScrolling={isScrolling}\r\n                  overscanRowCount={0}\r\n                  // onScroll={onChildScroll}\r\n                  // scrollTop={scrollTop}\r\n                  rowCount={renderList.length}\r\n                  rowHeight={cache.rowHeight}\r\n                  rowRenderer={Column}\r\n                  deferredMeasurementCache={cache}\r\n                  containerStyle={{ overflow: 'initial' }}\r\n                ></List>\r\n              </Scrollbars>\r\n            </>\r\n          );\r\n        }}\r\n      </AutoSizer>\r\n      {/* )}\r\n       </WindowScroller> */}\r\n    </TableBodyForm>\r\n  );\r\n};\r\nexport default TableBody;\r\n","import { TableHeaderType } from './TableForm';\r\n\r\ntype FilterProps = {\r\n  name: string;\r\n  hedearList: TableHeaderType[];\r\n};\r\n\r\nfunction TableFilter(props: FilterProps) {\r\n  return <div></div>;\r\n}\r\nexport default TableFilter;\r\n","import TableBody from './TableBody';\r\nimport TableFilter from './TableFilter';\r\n\r\ntype TableProps = {\r\n  renderList: any[];\r\n  hedearList: TableHeaderType[];\r\n  name: string;\r\n  getList: string;\r\n};\r\nexport type TableHeaderType = {\r\n  name: string;\r\n  key: string;\r\n  custom: boolean;\r\n  filterType: string;\r\n  size: number;\r\n  customFuncName?: string;\r\n};\r\n\r\nfunction TableForm(props: TableProps) {\r\n  const { hedearList, name, renderList, getList } = props;\r\n  return (\r\n    <div>\r\n      <TableFilter hedearList={hedearList} name={name}></TableFilter>\r\n      <TableBody\r\n        renderList={renderList}\r\n        hedearList={hedearList}\r\n        getList={getList}\r\n      ></TableBody>\r\n    </div>\r\n  );\r\n}\r\nexport default TableForm;\r\n","import { useCallback, useEffect } from 'react';\r\nimport { Col, Row, Container } from 'react-bootstrap';\r\nimport { useAppDispatch, useAppSelector } from '../../../store/hooks';\r\nimport TableForm, { TableHeaderType } from '../../layout/Table/TableForm';\r\n\r\nfunction CoronaMap() {\r\n  const corona = useAppSelector((state) => state.corona.corona);\r\n  const index = useAppSelector((state) => state.corona.index);\r\n  const coronaHeader: TableHeaderType[] = [\r\n    {\r\n      key: 'CORONA19_DATE',\r\n      name: '확진일',\r\n      size: 10,\r\n      filterType: 'date',\r\n      custom: false,\r\n    },\r\n    // {\r\n    //   key: 'CORONA19_NO',\r\n    //   name: '환자번호',\r\n    //   size: 5,\r\n    //   filterType: 'number',\r\n    //   custom: false,\r\n    // },\r\n    {\r\n      key: 'CORONA19_COUNTRY',\r\n      name: '국적',\r\n      size: 10,\r\n      filterType: 'string',\r\n      custom: false,\r\n    },\r\n\r\n    {\r\n      key: 'CORONA19_PERSONAL',\r\n      name: '환자정보',\r\n      size: 10,\r\n      filterType: 'string',\r\n      custom: false,\r\n    },\r\n    {\r\n      key: 'CORONA19_AREA',\r\n      name: '지역',\r\n      size: 10,\r\n      filterType: 'string',\r\n      custom: false,\r\n    },\r\n    {\r\n      key: 'CORONA19_TRAVEL_HISTORY',\r\n      name: '여행력',\r\n      size: 10,\r\n      filterType: 'string',\r\n      custom: false,\r\n    },\r\n    {\r\n      key: 'CORONA19_CONTACT_HISTORY',\r\n      name: '접촉력',\r\n      size: 10,\r\n      filterType: 'string',\r\n      custom: false,\r\n    },\r\n    {\r\n      key: 'CORONA19_CORRECTIVE',\r\n      name: '조치사항',\r\n      size: 10,\r\n      filterType: 'string',\r\n      custom: false,\r\n    },\r\n    {\r\n      key: 'CORONA19_LEAVE_STATUS',\r\n      name: '상태',\r\n      size: 10,\r\n      filterType: 'string',\r\n      custom: false,\r\n    },\r\n    {\r\n      key: 'CORONA19_MOVING_PATH',\r\n      name: '이동경로',\r\n      size: 10,\r\n      filterType: 'string',\r\n      custom: false,\r\n    },\r\n    {\r\n      key: 'CORONA19_IDATE',\r\n      name: '등록일',\r\n      size: 10,\r\n      filterType: 'date',\r\n      custom: false,\r\n    },\r\n  ];\r\n  const dispatch = useAppDispatch();\r\n  const getCorona = useCallback(() => {\r\n    dispatch({\r\n      type: 'GET_CORONA',\r\n      index,\r\n    });\r\n  }, [dispatch, index]);\r\n  useEffect(() => {\r\n    if (corona.length === 0) {\r\n      getCorona();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Container fluid=\"md\">\r\n      <Row>\r\n        <Col md={12}>\r\n          <TableForm\r\n            hedearList={coronaHeader}\r\n            name=\"corona\"\r\n            renderList={corona}\r\n            getList=\"GET_CORONA\"\r\n          ></TableForm>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CoronaMap;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport type { RootState } from '../../store';\r\n\r\n// Define a type for the slice state\r\n\r\ntype statisticsType = {\r\n  num: number;\r\n  appearance: number;\r\n};\r\ntype myLottoList = {\r\n  round: number;\r\n  myLottoList: number[][];\r\n  url: string;\r\n};\r\n\r\ninterface LottoState {\r\n  lottoList: myLottoList[];\r\n  suggestion: number[][];\r\n  statisticsNumDesc: statisticsType[];\r\n  statisticsAppDesc: statisticsType[];\r\n  activeKey: number[];\r\n  camera: boolean;\r\n  toast: boolean;\r\n  recommendList: number[][];\r\n  top5List: number[];\r\n  notExistList: number[];\r\n}\r\n\r\n// Define the initial state using that type\r\nconst initialState: LottoState = {\r\n  lottoList: [],\r\n  suggestion: [],\r\n  statisticsNumDesc: [],\r\n  statisticsAppDesc: [],\r\n  activeKey: [],\r\n  camera: false,\r\n  toast: false,\r\n  recommendList: [],\r\n  top5List: [],\r\n  notExistList: [],\r\n};\r\n\r\ninterface IPayLoadLottoState {\r\n  round: number;\r\n  myLottoList: number[][];\r\n  url: string;\r\n}\r\ninterface IPayLoadActiveKeyState {\r\n  key: number;\r\n  type: 'open' | 'close';\r\n}\r\ninterface IPayLoadRemoveState {\r\n  key: number;\r\n}\r\n\r\nexport const lottoSlice = createSlice({\r\n  name: 'lotto',\r\n  initialState,\r\n  reducers: {\r\n    LOTTOADD: (state, action: PayloadAction<IPayLoadLottoState>) => {\r\n      const { myLottoList, round, url } = action.payload;\r\n      const obj = { round, myLottoList, url };\r\n      state.lottoList.push(obj);\r\n      state.toast = true;\r\n    },\r\n    LOTTOREMOVE: (state, action: PayloadAction<IPayLoadRemoveState>) => {\r\n      const { activeKey, lottoList } = state;\r\n      const { key } = action.payload;\r\n      const newActiveKey = activeKey\r\n        .filter((data) => data !== key)\r\n        .map((data) => (data > key ? data - 1 : data));\r\n      state.activeKey = newActiveKey;\r\n      lottoList.splice(key, 1);\r\n    },\r\n    LOTTOANALYZE: (state) => {\r\n      //많이 나온숫자 랑 적게 나온수\r\n      const { lottoList } = state;\r\n      let statisticsList: statisticsType[] = [];\r\n      lottoList.forEach((list) => {\r\n        list.myLottoList.flat().forEach((num) => {\r\n          const findI = statisticsList.findIndex(\r\n            (statistics) => statistics.num === num,\r\n          );\r\n          findI > -1\r\n            ? statisticsList[findI].appearance++\r\n            : statisticsList.push({ num, appearance: 1 });\r\n        });\r\n      });\r\n      const NumDesc = statisticsList.sort((a, b) => a.num - b.num);\r\n      const AppDesc = statisticsList.sort(\r\n        (a, b) => b.appearance - a.appearance,\r\n      );\r\n      state.statisticsNumDesc = NumDesc;\r\n      state.statisticsAppDesc = AppDesc;\r\n      const top5List = makeTop5List(NumDesc);\r\n\r\n      state.top5List = top5List;\r\n      const notExistList = makeNotExistList(AppDesc);\r\n\r\n      state.notExistList = notExistList;\r\n    },\r\n    LOTTOACTIVEKEY: (state, action: PayloadAction<IPayLoadActiveKeyState>) => {\r\n      let { activeKey } = state;\r\n      const { key, type } = action.payload;\r\n\r\n      if (type === 'close') {\r\n        state.activeKey = activeKey.filter((data) => data !== key);\r\n      } else {\r\n        activeKey.push(key);\r\n      }\r\n    },\r\n    LOTTOCAMERA: (state) => {\r\n      state.camera = !state.camera;\r\n    },\r\n    LOTTOTOASTCLOSE: (state) => {\r\n      state.toast = false;\r\n    },\r\n    LOTTORECOMMEND: (state) => {\r\n      const { lottoList, statisticsNumDesc, notExistList, top5List } = state;\r\n      let check = true;\r\n      let checkList: number[][] = [];\r\n      while (check) {\r\n        const topRandomNumber = makeTopRandomNumber(lottoList, top5List);\r\n        const existRandomNumber = makeExistRandomNumber(\r\n          lottoList,\r\n          statisticsNumDesc,\r\n        );\r\n        const notExistRandomNumber = makeNotExistRandomNumber(\r\n          lottoList,\r\n          notExistList,\r\n        );\r\n        const randomNumber1 = makeRandomNumber(lottoList);\r\n        const randomNumber2 = makeRandomNumber(lottoList);\r\n        checkList = [\r\n          topRandomNumber,\r\n          existRandomNumber,\r\n          notExistRandomNumber,\r\n          randomNumber1,\r\n          randomNumber2,\r\n        ];\r\n\r\n        const checkArr = checkList.map(\r\n          (data) =>\r\n            checkList.filter(\r\n              (filterdata) =>\r\n                JSON.stringify(data) === JSON.stringify(filterdata),\r\n            ).length > 1,\r\n        );\r\n        check = checkArr.some((data) => data === true);\r\n      }\r\n      state.recommendList = checkList;\r\n      //final check\r\n    },\r\n  },\r\n});\r\n\r\nconst makeTop5List = (statisticsNumDesc: statisticsType[]) => {\r\n  const maxCount = 5;\r\n\r\n  let countAppearance = statisticsNumDesc[0].appearance;\r\n  let top5List: number[] = [];\r\n  while (top5List.length < maxCount) {\r\n    const countNum = statisticsNumDesc.filter(\r\n      (data) => countAppearance === data.appearance,\r\n    );\r\n\r\n    countAppearance--;\r\n    countNum.forEach((data) => {\r\n      top5List.push(data.num);\r\n    });\r\n  }\r\n  return top5List;\r\n};\r\nconst makeNotExistList = (statisticsAppDesc: statisticsType[]) => {\r\n  const arr = new Array(45).fill(0);\r\n  const initLottoNumArr = arr.map((data, i) => i + 1);\r\n  const existArr = statisticsAppDesc\r\n    .filter((data) => data.appearance !== 0)\r\n    .map((data) => data.num);\r\n\r\n  return initLottoNumArr.filter((Idata) => {\r\n    let check = existArr.filter((Edata) => Edata === Idata).length === 0;\r\n\r\n    return check;\r\n  });\r\n};\r\n\r\nconst makeTopRandomNumber = (lottoList: myLottoList[], top5List: number[]) => {\r\n  const listLength = top5List.length;\r\n  const maxLength = 6;\r\n  const maxNumber = 45;\r\n  const useUnit = Math.floor(listLength * Math.random() + 1);\r\n  let pass = true;\r\n  let arrs: number[] = [];\r\n  while (pass) {\r\n    arrs = [];\r\n    for (let i = 0; i < maxLength; i++) {\r\n      let choiseNumber = 0;\r\n      const randomPopNumber = Math.floor(listLength * Math.random());\r\n      if (i < useUnit) {\r\n        choiseNumber = top5List[randomPopNumber];\r\n      } else {\r\n        choiseNumber = Math.floor(maxNumber * Math.random() + 1);\r\n      }\r\n      arrs.some((data) => data === choiseNumber)\r\n        ? i--\r\n        : arrs.push(choiseNumber);\r\n    }\r\n    arrs.sort((a, b) => a - b);\r\n    pass = !deduplicationFunc(lottoList, arrs);\r\n  }\r\n  return arrs;\r\n};\r\nconst makeExistRandomNumber = (\r\n  lottoList: myLottoList[],\r\n  statisticsNumDesc: statisticsType[],\r\n) => {\r\n  const listLength = statisticsNumDesc.length;\r\n  const maxLength = 6;\r\n  const maxNumber = 45;\r\n  const useUnit = Math.floor(listLength * Math.random() + 1);\r\n  let pass = true;\r\n  let arrs: number[] = [];\r\n  while (pass) {\r\n    arrs = [];\r\n    for (let i = 0; i < maxLength; i++) {\r\n      let choiseNumber = 0;\r\n      const randomPopNumber = Math.floor(listLength * Math.random());\r\n      if (i < useUnit) {\r\n        choiseNumber = statisticsNumDesc[randomPopNumber].num;\r\n      } else {\r\n        choiseNumber = Math.floor(maxNumber * Math.random() + 1);\r\n      }\r\n      arrs.some((data) => data === choiseNumber)\r\n        ? i--\r\n        : arrs.push(choiseNumber);\r\n    }\r\n    arrs.sort((a, b) => a - b);\r\n    pass = !deduplicationFunc(lottoList, arrs);\r\n  }\r\n  return arrs;\r\n};\r\nconst makeNotExistRandomNumber = (\r\n  lottoList: myLottoList[],\r\n  notExistList: number[],\r\n) => {\r\n  const listLength = notExistList.length;\r\n  const maxLength = 6;\r\n  const maxNumber = 45;\r\n  const useUnit = Math.floor(listLength * Math.random() + 1);\r\n  let pass = true;\r\n  let arrs: number[] = [];\r\n  while (pass) {\r\n    arrs = [];\r\n    for (let i = 0; i < maxLength; i++) {\r\n      let choiseNumber = 0;\r\n      const randomPopNumber = Math.floor(listLength * Math.random());\r\n      if (i < useUnit) {\r\n        choiseNumber = notExistList[randomPopNumber];\r\n      } else {\r\n        choiseNumber = Math.floor(maxNumber * Math.random() + 1);\r\n      }\r\n      arrs.some((data) => data === choiseNumber)\r\n        ? i--\r\n        : arrs.push(choiseNumber);\r\n    }\r\n    arrs.sort((a, b) => a - b);\r\n    pass = !deduplicationFunc(lottoList, arrs);\r\n  }\r\n  return arrs;\r\n};\r\nconst makeRandomNumber = (lottoList: myLottoList[]) => {\r\n  const maxLength = 6;\r\n  const maxNumber = 45;\r\n  let pass = true;\r\n  let arrs: number[] = [];\r\n  while (pass) {\r\n    arrs = [];\r\n    for (let i = 0; i < maxLength; i++) {\r\n      let choiseNumber = 0;\r\n      choiseNumber = Math.floor(maxNumber * Math.random() + 1);\r\n      arrs.some((data) => data === choiseNumber)\r\n        ? i--\r\n        : arrs.push(choiseNumber);\r\n    }\r\n    arrs.sort((a, b) => a - b);\r\n    pass = !deduplicationFunc(lottoList, arrs);\r\n  }\r\n  return arrs;\r\n};\r\n\r\nconst deduplicationFunc = (lottoList: myLottoList[], testList: number[]) => {\r\n  let pass = true;\r\n\r\n  lottoList.forEach(\r\n    (data) =>\r\n      (pass =\r\n        data.myLottoList.filter((myLotto) => myLotto === testList).length > 0\r\n          ? false\r\n          : pass),\r\n  );\r\n  return pass;\r\n};\r\nexport const {\r\n  LOTTOADD,\r\n  LOTTOREMOVE,\r\n  LOTTOANALYZE,\r\n  LOTTOACTIVEKEY,\r\n  LOTTOCAMERA,\r\n  LOTTOTOASTCLOSE,\r\n  LOTTORECOMMEND,\r\n} = lottoSlice.actions;\r\n\r\n// Other code such as selectors can use the imported `RootState` type\r\nexport const selectMyNumber = (state: RootState) => state.lotto.lottoList;\r\nexport const selectMyStatisticsAppDesc = (state: RootState) =>\r\n  state.lotto.statisticsAppDesc;\r\nexport const selectMyStatisticsMumDesc = (state: RootState) =>\r\n  state.lotto.statisticsNumDesc;\r\nexport const selectAnalyzeNumber = (state: RootState) => state.lotto.suggestion;\r\n\r\nexport default lottoSlice.reducer;\r\n","import { useState } from 'react';\r\nimport { Toast, Button } from 'react-bootstrap';\r\nimport QrReader from 'react-qr-reader';\r\nimport { useAppDispatch, useAppSelector } from '../../../store/hooks';\r\nimport { LOTTOADD, LOTTOTOASTCLOSE } from '../../../store/lotto';\r\n\r\nfunction LottoQr() {\r\n  const dispatch = useAppDispatch();\r\n  const toast = useAppSelector((state) => state.lotto.toast);\r\n  const [domain, setDomain] = useState<string | null>();\r\n  const [count, setCount] = useState(0);\r\n\r\n  const handleError = (err: any) => {\r\n    console.error(err);\r\n  };\r\n  const testHandleScan = () => {\r\n    const urls = [\r\n      'http://m.dhlottery.co.kr/?v=0998q151628333645q041314263240q020508172342q021723263841q0304222536441825105799',\r\n      'http://m.dhlottery.co.kr/?v=0998q030708213641q010718192741q131825263144q031428353945q1017193342431825105350',\r\n      'http://m.dhlottery.co.kr/?v=0998q122226333543q202124373839q101734404445q021525263344q0810113240451825104941',\r\n      'http://m.dhlottery.co.kr/?v=0998q101620233645q111428293044q081214263140q021733404142q0205243136451825107978',\r\n      'http://m.dhlottery.co.kr/?v=0998q010412242734q040508353745q041726293242q111418242629q0408172426411825104460',\r\n    ];\r\n\r\n    handleScan(urls[count]);\r\n    setCount(count + 1);\r\n  };\r\n  const handleScan = (scanResult: string | null) => {\r\n    const lottoreg = /dhlottery/g;\r\n    if (scanResult) {\r\n      if (scanResult === domain && lottoreg.test(scanResult)) return;\r\n      setRedux(scanResult);\r\n    }\r\n  };\r\n\r\n  const setRedux = async (scanResult: string) => {\r\n    try {\r\n      setDomain(scanResult);\r\n      const queryData = scanResult.split('v=')[1].split('q');\r\n      const round = Number(queryData[0]);\r\n      const numberList = queryData.slice(1);\r\n      const myNumberList = await myNumberListFunc(numberList);\r\n      dispatch(LOTTOADD({ round, myLottoList: myNumberList, url: scanResult }));\r\n    } catch (err: any) {\r\n      console.error(err);\r\n    }\r\n  };\r\n  const myNumberListFunc = (numberList: string[]) => {\r\n    return numberList.map((data) => {\r\n      let Numbers: number[] = [];\r\n      for (let i = 0; i < 6; i++) {\r\n        Numbers.push(Number(data.substr(i * 2, 2)));\r\n      }\r\n      return Numbers;\r\n    });\r\n  };\r\n  const setClose = () => {\r\n    dispatch(LOTTOTOASTCLOSE());\r\n  };\r\n  return (\r\n    <>\r\n      <Button variant=\"outline-primary\" onClick={() => testHandleScan()}>\r\n        TEST\r\n      </Button>\r\n      <Toast onClose={setClose} show={toast} delay={1500} autohide>\r\n        <Toast.Body>추가되었습니다!</Toast.Body>\r\n      </Toast>\r\n      <QrReader\r\n        delay={300}\r\n        onError={handleError}\r\n        onScan={handleScan}\r\n        style={{ width: '100%' }}\r\n      />\r\n    </>\r\n  );\r\n}\r\nexport default LottoQr;\r\n","import { Table, Button } from 'react-bootstrap';\r\nimport { useAppDispatch, useAppSelector } from '../../../store/hooks';\r\nimport {\r\n  LOTTOACTIVEKEY,\r\n  LOTTOANALYZE,\r\n  LOTTOREMOVE,\r\n} from '../../../store/lotto';\r\nimport styled from 'styled-components';\r\nimport { GoDiffRemoved } from 'react-icons/go';\r\n\r\nconst Accordion = styled.div`\r\n  width: 100%;\r\n  border-top-left-radius: 0.25rem;\r\n  border-top-right-radius: 0.25rem;\r\n  border: 1px solid rgba(0, 0, 0, 0.125);\r\n`;\r\nconst AccordionForm = styled.div`\r\n  border: 1px solid rgba(0, 0, 0, 0.125);\r\n`;\r\nconst AccordionBody = styled.div`\r\n  padding: 1rem 1.25rem;\r\n`;\r\nconst AccordionRemoveButton = styled.div`\r\n  border: 0;\r\n  border-radius: 0;\r\n  overflow-anchor: none;\r\n  cursor: pointer;\r\n`;\r\nconst AccordionHeader = styled.div`\r\n  border: 1px solid rgba(0, 0, 0, 0.125);\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 1rem 1.25rem;\r\n  font-size: 1rem;\r\n  background-color: ${(props) =>\r\n    props.unselectable === 'on' ? '#d9d9d9' : '#fff'};\r\n  border: 0;\r\n  border-radius: 0;\r\n  overflow-anchor: none;\r\n`;\r\nconst AccordionHeaderButton = styled.button`\r\n  border: 1px solid rgba(0, 0, 0, 0.125);\r\n  width: 100%;\r\n  font-size: 1rem;\r\n  color: #212529;\r\n  text-align: left;\r\n  background-color: ${(props) =>\r\n    props.unselectable === 'on' ? '#d9d9d9' : '#fff'};\r\n  border: 0;\r\n  border-radius: 0;\r\n  overflow-anchor: none;\r\n`;\r\n\r\nfunction LottoMyNumber() {\r\n  const lottoList = useAppSelector((state) => state.lotto.lottoList);\r\n  const activeKey = useAppSelector((state) => state.lotto.activeKey);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const activeKeyHandler = (key: number, type: 'open' | 'close') => {\r\n    dispatch(LOTTOACTIVEKEY({ key, type }));\r\n  };\r\n\r\n  const removeHandler = (key: number) => {\r\n    dispatch(LOTTOREMOVE({ key }));\r\n  };\r\n  const analyzeHandler = () => {\r\n    if (lottoList.length > 2) dispatch(LOTTOANALYZE());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={analyzeHandler} variant=\"outline-secondary\">\r\n        analyze\r\n      </Button>\r\n      <Accordion>\r\n        {lottoList.map((lotto, i) => (\r\n          <AccordionForm key={i}>\r\n            <AccordionHeader\r\n              unselectable={\r\n                activeKey.find((data) => data === i) !== undefined\r\n                  ? 'on'\r\n                  : 'off'\r\n              }\r\n            >\r\n              <AccordionHeaderButton\r\n                onClick={() =>\r\n                  activeKeyHandler(\r\n                    i,\r\n                    activeKey.find((data) => data === i) !== undefined\r\n                      ? 'close'\r\n                      : 'open',\r\n                  )\r\n                }\r\n                unselectable={\r\n                  activeKey.find((data) => data === i) !== undefined\r\n                    ? 'on'\r\n                    : 'off'\r\n                }\r\n              >{`${lotto.round} 회차(${i + 1})\\n ${\r\n                lotto.url\r\n              }`}</AccordionHeaderButton>\r\n              <AccordionRemoveButton onClick={() => removeHandler(i)}>\r\n                <GoDiffRemoved></GoDiffRemoved>\r\n              </AccordionRemoveButton>\r\n            </AccordionHeader>\r\n            {activeKey.find((data) => data === i) !== undefined ? (\r\n              <AccordionBody>\r\n                <Table striped bordered hover size=\"sm\">\r\n                  <thead></thead>\r\n                  <tbody>\r\n                    {lotto.myLottoList.map((numbers, index) => (\r\n                      <tr key={index}>\r\n                        <td>{index + 1}</td>\r\n                        <td></td>\r\n                        {numbers.map((number) => (\r\n                          <td key={number}>{number}</td>\r\n                        ))}\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n              </AccordionBody>\r\n            ) : null}\r\n          </AccordionForm>\r\n        ))}\r\n      </Accordion>\r\n    </>\r\n  );\r\n}\r\nexport default LottoMyNumber;\r\n","import { useEffect, useState } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport { useAppDispatch, useAppSelector } from '../../../store/hooks';\r\n\r\nconst BoxForm = styled.div`\r\n  width: 100%;\r\n  overflow: scroll;\r\n`;\r\n\r\nfunction LottoAnalyze() {\r\n  const statisticsNumDesc = useAppSelector(\r\n    (state) => state.lotto.statisticsNumDesc,\r\n  );\r\n  const statisticsAppDesc = useAppSelector(\r\n    (state) => state.lotto.statisticsAppDesc,\r\n  );\r\n  const suggestion = useAppSelector((state) => state.lotto.suggestion);\r\n  const dispatch = useAppDispatch();\r\n  const [numberList, setNumberList] = useState<number[]>([]);\r\n\r\n  useEffect(() => {\r\n    setNumberListFuntion();\r\n  }, []);\r\n\r\n  const setNumberListFuntion = () => {\r\n    let List = [];\r\n    for (let i = 0; i < 45; i++) {\r\n      List.push(i + 1);\r\n    }\r\n    setNumberList(List);\r\n  };\r\n\r\n  return (\r\n    <BoxForm>\r\n      <h4>번호 순</h4>\r\n      <Table striped bordered hover size=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            {numberList.map((num) => (\r\n              <td key={num}>{num}</td>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            {numberList.map((num) => {\r\n              const findObj = statisticsNumDesc.find(\r\n                (data) => data.num === num,\r\n              );\r\n              const appearance = findObj?.appearance ? findObj?.appearance : 0;\r\n              return <td key={num}>{appearance}</td>;\r\n            })}\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n      <h4>많이 나온 순</h4>\r\n      <Table striped bordered hover size=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            {statisticsAppDesc.map((data) => (\r\n              <td key={data.num}>{data.num}</td>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            {statisticsAppDesc.map((data) => (\r\n              <td key={data.num}>{data.appearance}</td>\r\n            ))}\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n    </BoxForm>\r\n  );\r\n}\r\nexport default LottoAnalyze;\r\n","import { Table, Button, Form } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport { useAppDispatch, useAppSelector } from '../../../store/hooks';\r\nimport { BiRefresh } from 'react-icons/bi';\r\nimport { LOTTORECOMMEND } from '../../../store/lotto';\r\nconst ButtonBox = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 3fr 1fr;\r\n`;\r\nconst Rotate = styled.div`\r\n  transition: all ease 1s;\r\n  display: inline-block;\r\n  cursor: pointer;\r\n  &:hover {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\nfunction LottoRecommend() {\r\n  const recommendList = useAppSelector((state) => state.lotto.recommendList);\r\n  const statisticsNumDesc = useAppSelector(\r\n    (state) => state.lotto.statisticsNumDesc,\r\n  );\r\n\r\n  const dispatch = useAppDispatch();\r\n  const onClickRecommend = () => {\r\n    if (statisticsNumDesc.length > 10) {\r\n      dispatch(LOTTORECOMMEND());\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <ButtonBox>\r\n        <Button onClick={onClickRecommend} variant=\"outline-secondary\">\r\n          추첨하기{' '}\r\n        </Button>\r\n        <Rotate onClick={onClickRecommend}>\r\n          <BiRefresh size={'100%'}></BiRefresh>\r\n        </Rotate>\r\n      </ButtonBox>\r\n\r\n      <Table striped bordered hover size=\"sm\">\r\n        <tbody>\r\n          {recommendList.map((data, i) => (\r\n            <tr key={i}>\r\n              {data.map((number, j) => (\r\n                <td key={j}>{number}</td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n}\r\nexport default LottoRecommend;\r\n","import { useState } from 'react';\r\nimport { Col, Row, Container, Button } from 'react-bootstrap';\r\nimport { useAppDispatch, useAppSelector } from '../../../store/hooks';\r\nimport { LOTTOADD, LOTTOANALYZE, LOTTOCAMERA } from '../../../store/lotto';\r\n\r\nimport LottoQr from './LottoQr';\r\nimport LottoMyNumber from './LottoMyNumber';\r\nimport styled from 'styled-components';\r\nimport LottoAnalyze from './LottoAnalyze';\r\nimport LottoRecommend from './LottoRecommend';\r\nconst Box = styled.div`\r\n  border: 1px solid rgba(0, 0, 0, 0.125);\r\n  width: 100%;\r\n  padding: 1rem;\r\n`;\r\nfunction LottoQrTemplate() {\r\n  const camera = useAppSelector((state) => state.lotto.camera);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const cameraHandler = () => {\r\n    dispatch(LOTTOCAMERA());\r\n  };\r\n\r\n  return (\r\n    <Container fluid=\"md\">\r\n      <Row>\r\n        <Col md={12}>\r\n          <Box>\r\n            <h2>\r\n              <strong>제 취미가 로또서 만든 기능입니다</strong>\r\n            </h2>\r\n            <h4>로또를 자동으로 사고 싶은 만큼 사고</h4>\r\n            <h4>그 자동으로 나온 번호를 제 나름의 분석 법을 정의 했고,</h4>\r\n            <h4>그리고 추천 번호 까지 해봅니다.</h4>\r\n            <h4>추천 번호는 5개 숫자 조합으로 </h4>\r\n            <h4>안나온 번호의 n개로 랜덤 조합 1개</h4>\r\n            <h4>나온 번호 top 5로 랜덤 n개의 번호 조합 1개</h4>\r\n            <h4>나온 번호로 랜덤 조합 1개</h4>\r\n            <h4>나머지는 그냥 랜덤 번호입니다.</h4>\r\n            <h4>모두 기본 조합에서 나오지 않은 번호로 만들었습니다.</h4>\r\n          </Box>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md={4}>\r\n          <Box>\r\n            <h3>QR Code scan</h3>\r\n            <Button variant=\"outline-primary\" onClick={cameraHandler}>\r\n              camera{camera ? ' close' : ' open'}\r\n            </Button>\r\n            {camera ? <LottoQr></LottoQr> : null}\r\n          </Box>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Box>\r\n            <h3>QR List</h3>\r\n\r\n            <LottoMyNumber></LottoMyNumber>\r\n          </Box>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Box>\r\n            <h3>Analyze</h3>\r\n            <LottoAnalyze></LottoAnalyze>\r\n          </Box>\r\n\r\n          <Box>\r\n            <h3>랜덤 추천</h3>\r\n            <LottoRecommend></LottoRecommend>\r\n          </Box>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\nexport default LottoQrTemplate;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router';\r\nimport Home from '../components/home/Home';\r\nimport SelfIntroduce from '../components/self-introduce/Self-Introduce';\r\nimport CoronaMap from '../components/skill/Corona/CoronaMap';\r\nimport LottoQrNumber from '../components/skill/Lotto/LottoTemplate';\r\n\r\nconst ControlRoute: React.FC = () => (\r\n  <Switch>\r\n    <Route exact path=\"/\">\r\n      <Home />\r\n    </Route>\r\n    <Route path=\"/skill/1\">\r\n      <CoronaMap></CoronaMap>\r\n    </Route>\r\n    <Route path=\"/skill/2\">\r\n      <LottoQrNumber></LottoQrNumber>\r\n    </Route>\r\n    <Route path=\"/selfintroduce\">\r\n      <SelfIntroduce />\r\n    </Route>\r\n    <Route path=\"*\">\r\n      <Home />\r\n    </Route>\r\n  </Switch>\r\n);\r\nexport default ControlRoute;\r\n","import { Container } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\n\r\nconst FooterComponent = styled.div`\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  background-color: #212528;\r\n  overflow: hidden;\r\n  color: white;\r\n  padding-top: 3rem;\r\n  padding-bottom: 3rem;\r\n`;\r\nconst FooterTitle = styled.h2`\r\n  font-weight: bolder;\r\n  margin-bottom: 1em;\r\n`;\r\nconst FooterText = styled.div`\r\n  margin-top: 0.5rem;\r\n  color: #e2e2e2;\r\n`;\r\nfunction Footer() {\r\n  return (\r\n    <FooterComponent>\r\n      <Container>\r\n        <FooterTitle>박성무의 경력기술서</FooterTitle>\r\n\r\n        <FooterText>만든 사람 : 박성무</FooterText>\r\n        <FooterText>문의 메일 : tjdanqkr@gmail.com</FooterText>\r\n        <FooterText>거주지 : 서울특별시 신림역 인근</FooterText>\r\n        <FooterText>도와준 사람 : 배은지</FooterText>\r\n      </Container>\r\n    </FooterComponent>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import styled, { ThemeProvider } from \"styled-components\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Headers from \"./components/layout/Headers\";\r\nimport { darktheme, lighttheme } from \"./style/theme\";\r\nimport GlobalStyle from \"./style/global-style\";\r\nimport { useAppSelector } from \"./store/hooks\";\r\nimport ControlRoute from \"./router\";\r\nimport Footer from \"./components/layout/Footer\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nconst MyContainer = styled.div`\r\n  background-color: ${(props) => props.theme.mainBackground};\r\n  color: ${(props) => props.theme.color};\r\n  position: relative;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\nconst Main = styled.div`\r\n  min-height: 100%;\r\n  margin-bottom: 2em;\r\n  margin-top: 0;\r\n`;\r\n\r\nfunction App() {\r\n  const mode = useAppSelector((state) => state.theme.mode);\r\n  return (\r\n    <ThemeProvider theme={mode === \"dark\" ? darktheme : lighttheme}>\r\n      <GlobalStyle />\r\n      <MyContainer>\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n          <header>\r\n            <Headers></Headers>\r\n          </header>\r\n          <main>\r\n            <Main>\r\n              <ControlRoute></ControlRoute>\r\n            </Main>\r\n          </main>\r\n          <footer>\r\n            <Footer></Footer>\r\n          </footer>\r\n        </BrowserRouter>\r\n      </MyContainer>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://tjdanqkr.kro.kr';\r\n\r\nconst coronaApi = async (start = 1000) => {\r\n  const res = await axios.get(`/corona/${start}/`);\r\n  return res;\r\n};\r\nexport default coronaApi;\r\n","import { AxiosResponse } from 'axios';\r\nimport { put, takeEvery, call } from 'redux-saga/effects';\r\nimport coronaApi from '../../api/corona';\r\nimport { coronaDataType } from '.';\r\n\r\ntype coronaResType = {\r\n  Corona19Status: SuccessType;\r\n};\r\ntype SuccessType = {\r\n  corona: coronaDataType[];\r\n  maxLength: number;\r\n};\r\ntype actionType = {\r\n  index: number;\r\n  type: string;\r\n};\r\n\r\nfunction* callCoronaApi(action: actionType) {\r\n  try {\r\n    const corona: AxiosResponse<coronaResType> = yield call(\r\n      coronaApi,\r\n      action.index,\r\n    );\r\n\r\n    yield put({\r\n      type: 'corona/SUSSESS_CORONA',\r\n      payload: corona.data,\r\n    });\r\n  } catch (e) {\r\n    if (e instanceof Error) {\r\n      yield put({\r\n        type: 'corona/FAIL_CORONA',\r\n        payload: e.message,\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport function* getCoronaApi() {\r\n  yield takeEvery('GET_CORONA', callCoronaApi);\r\n}\r\n","import { all } from '@redux-saga/core/effects';\r\nimport { getCoronaApi } from '../corona/coronaSaga';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([getCoronaApi()]);\r\n}\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport type { RootState } from '..';\r\n\r\n// Define a type for the slice state\r\nexport interface coronaDataType {\r\n  CORONA19_AREA: string;\r\n  CORONA19_CONTACT_HISTORY: string;\r\n  CORONA19_CORRECTIVE: string;\r\n  CORONA19_COUNTRY: string;\r\n  CORONA19_DATE: string;\r\n  CORONA19_ID: string;\r\n  CORONA19_IDATE: string;\r\n  CORONA19_LEAVE_STATUS: string;\r\n  CORONA19_MOVING_PATH: string;\r\n  CORONA19_NO: string;\r\n  CORONA19_PERSONAL: string;\r\n  CORONA19_TRAVEL_HISTORY: string;\r\n}\r\ntype IState = {\r\n  corona: coronaDataType[];\r\n  maxLength: number;\r\n  index: number;\r\n  message: string;\r\n};\r\n// Define the initial state using that type\r\nconst initialState: IState = {\r\n  corona: [],\r\n  maxLength: 1000,\r\n  index: 1,\r\n  message: '',\r\n};\r\n\r\ninterface IError {\r\n  message: string;\r\n}\r\n\r\nexport const corona = createSlice({\r\n  name: 'corona',\r\n  initialState,\r\n  reducers: {\r\n    SUSSESS_CORONA: (state, action: PayloadAction<IState>) => {\r\n      const concatList = state.corona.concat(action.payload.corona);\r\n      const maxLength = action.payload.maxLength;\r\n      state.corona = concatList;\r\n      state.maxLength = maxLength;\r\n      state.index =\r\n        maxLength <= state.index + 1000 ? maxLength : state.index + 1000;\r\n    },\r\n    FAIL_CORONA: (state, action: PayloadAction<IError>) => {\r\n      state.message = action.payload.message;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { SUSSESS_CORONA, FAIL_CORONA } = corona.actions;\r\n\r\n// Other code such as selectors can use the imported `RootState` type\r\nexport const selectCoronaMembers = (state: RootState) => state.corona;\r\n\r\nexport default corona.reducer;\r\n","import createSagaMiddleware from '@redux-saga/core';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport rootSaga from './saga';\r\nimport themeMode from './themeMode';\r\nimport corona from './corona';\r\nimport toggle from './toggle';\r\nimport lotto from './lotto';\r\nconst isDev = process.env.NODE_ENV !== 'production';\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst createStore = () => {\r\n  const store = configureStore({\r\n    reducer: {\r\n      theme: themeMode,\r\n      corona: corona,\r\n      toggle: toggle,\r\n      lotto: lotto,\r\n    },\r\n    devTools: isDev,\r\n    middleware: [sagaMiddleware],\r\n  });\r\n  sagaMiddleware.run(rootSaga);\r\n  return store;\r\n};\r\nexport const store = createStore();\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}