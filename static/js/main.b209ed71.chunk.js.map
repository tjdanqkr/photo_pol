{"version":3,"sources":["store/hooks.ts","store/themeMode/index.ts","components/layout/Headers.tsx","style/theme.ts","style/global-style.ts","img/logo.svg","components/home/Home.tsx","router/index.tsx","components/layout/Footer.tsx","App.tsx","reportWebVitals.ts","store/index.ts","index.tsx"],"names":["useAppSelector","useSelector","initialState","mode","localStorage","getItem","themeSlice","createSlice","name","reducers","darkMode","state","setItem","lightMode","actions","Headers","theme","dispatch","useDispatch","Navbar","collapseOnSelect","expand","bg","variant","sticky","Container","Brand","as","Link","to","Toggle","aria-controls","Collapse","id","Nav","className","Button","onClick","darktheme","mainBackground","color","title","primaryText","secondaryText","disable","border","divider","background","tableHeader","response","lighttheme","GlobalStyle","createGlobalStyle","Title","styled","div","H2","H1","TitleBox","GrayBox","LogoForm","RelativeBox","TechForm","TechImg","img","TechImgTem","TechText","ContentForm","ContentTitle","ContentSub","Home","Row","Col","md","fluid","src","logosvg","alt","text","map","data","i","crossOrigin","sub","ControlRoute","basename","process","path","exact","component","FooterComponent","FooterText","Footer","MyContainer","props","Main","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","themeMode","devTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b209ed71.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from './';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport type { RootState } from '../../store';\r\n\r\n// Define a type for the slice state\r\ninterface ThemeState {\r\n  mode: 'dark' | 'light';\r\n}\r\n\r\n// Define the initial state using that type\r\nconst initialState: ThemeState = {\r\n  mode: localStorage.getItem('mode') === 'dark' ? 'dark' : 'light',\r\n};\r\n\r\nexport const themeSlice = createSlice({\r\n  name: 'theme',\r\n  initialState,\r\n  reducers: {\r\n    darkMode: (state) => {\r\n      localStorage.setItem('mode', 'dark');\r\n      state.mode = 'dark';\r\n    },\r\n    lightMode: (state) => {\r\n      localStorage.setItem('mode', 'light');\r\n      state.mode = 'light';\r\n    },\r\n  },\r\n});\r\n\r\nexport const { darkMode, lightMode } = themeSlice.actions;\r\n\r\n// Other code such as selectors can use the imported `RootState` type\r\nexport const selectTheme = (state: RootState) => state.theme.mode;\r\n\r\nexport default themeSlice.reducer;\r\n","import NavItem from '@restart/ui/esm/NavItem';\r\nimport { Container, Nav, Navbar, NavDropdown, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\r\nimport { darkMode, lightMode } from '../../store/themeMode';\r\nfunction Headers() {\r\n  const mode = useAppSelector((state) => state.theme.mode);\r\n  const dispatch = useAppDispatch();\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"md\" bg={mode} variant={mode} sticky=\"top\">\r\n      <Container>\r\n        <Navbar.Brand as={Link} to=\"/\">\r\n          <h2>박성무의 경력기술서</h2>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"me-auto\">\r\n            <Nav.Link as={Link} to=\"/\">\r\n              <strong>Home</strong>\r\n            </Nav.Link>\r\n            <Nav.Link as={Link} to=\"/modules\">\r\n              <strong>Modules</strong>\r\n            </Nav.Link>\r\n            {/* <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.2\">\r\n                Another action\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item href=\"#action/3.4\">\r\n                Separated link\r\n              </NavDropdown.Item>\r\n            </NavDropdown> */}\r\n          </Nav>\r\n          <Nav>\r\n            <Button\r\n              variant={mode === 'dark' ? 'secondary' : 'dark'}\r\n              onClick={() => {\r\n                mode === 'dark' ? dispatch(lightMode()) : dispatch(darkMode());\r\n              }}\r\n            >\r\n              {mode === 'dark' ? 'light' : 'dark'}\r\n            </Button>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Headers;\r\n","import styled, { css, DefaultTheme } from 'styled-components';\r\n\r\nconst darktheme: DefaultTheme = {\r\n  mainBackground: `#333`,\r\n\r\n  color: `rgba(255,255,255,0.85)`,\r\n  title: `rgba(255,255,255,0.85)`,\r\n  primaryText: `rgba(255,255,255,0.65)`,\r\n  secondaryText: `rgba(255,255,255,0.45)`,\r\n  disable: `rgba(255,255,255,0.25)`,\r\n  border: `rgba(255,255,255,0.15)`,\r\n  divider: `rgba(255,255,255,0.06)`,\r\n  background: `rgba(255,255,255,0.04)`,\r\n  tableHeader: `rgba(255,255,255,0.02)`,\r\n\r\n  response: {},\r\n};\r\n\r\nconst lighttheme: DefaultTheme = {\r\n  mainBackground: `#fff`,\r\n\r\n  color: `rgba(0, 0, 0, 0.85)`,\r\n  title: `rgba(0, 0, 0, 0.85)`,\r\n  primaryText: `rgba(0, 0, 0, 0.75)`,\r\n  secondaryText: `rgba(0, 0, 0, 0.45)`,\r\n  disable: `rgba(0, 0, 0, 0.25)`,\r\n  border: `rgba(0, 0, 0, 0.15)`,\r\n  divider: `rgba(0, 0, 0, 0.06)`,\r\n  background: `rgba(0, 0, 0, 0.04)`,\r\n  tableHeader: `rgba(0, 0, 0, 0.02)`,\r\n\r\n  response: {},\r\n};\r\n\r\nexport { darktheme, lighttheme };\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n  html,\r\n  body {\r\n    height: 100%;\r\n  }\r\n\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Col, Row, Container } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport logosvg from '../../img/logo.svg';\r\nconst Title = styled.div`\r\n  background-color: #212529;\r\n  color: white;\r\n\r\n  padding-top: 3em;\r\n  padding-bottom: 3em;\r\n`;\r\nconst H2 = styled.div`\r\n  font-size: 2em;\r\n`;\r\nconst H1 = styled.div`\r\n  font-size: 2.5em;\r\n`;\r\nconst TitleBox = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  flex-wrap: wrap;\r\n`;\r\nconst GrayBox = styled.div`\r\n  background-color: #e2e2e2;\r\n  margin-left: 2em;\r\n  margin-right: 2em;\r\n  margin-top: 3em;\r\n  margin-bottom: 3em;\r\n  padding: 1em 4em;\r\n  border-radius: 1em;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  color: black;\r\n`;\r\nconst LogoForm = styled.div`\r\n  position: absolute;\r\n  transform: translate(-1em, -4em);\r\n`;\r\nconst RelativeBox = styled.div`\r\n  position: relative;\r\n  width: 7em;\r\n`;\r\n\r\nconst TechForm = styled.div`\r\n  display: flex;\r\n  margin-right: 20 px;\r\n  margin-bottom: 20 px;\r\n  flex-direction: column;\r\n  align-items: stretch;\r\n`;\r\n\r\nconst TechImg = styled.img`\r\n  width: 100%;\r\n  max-height: 7em;\r\n`;\r\nconst TechImgTem = styled.div`\r\n  width: 100%;\r\n  max-height: 7em;\r\n`;\r\n\r\nconst TechText = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst ContentForm = styled.div`\r\n  display: flex;\r\n  margin-right: 20 px;\r\n  margin-bottom: 20 px;\r\n  flex-direction: column;\r\n  align-items: stretch;\r\n  height: 30em;\r\n  padding: 3em;\r\n`;\r\n\r\nconst ContentTitle = styled.div`\r\n  font-size: 2em;\r\n`;\r\n\r\nconst ContentSub = styled.div`\r\n  background-color: #b7a9ff;\r\n  height: 100%;\r\n  border-radius: 1em;\r\n  padding: 2em;\r\n`;\r\ntype tech = {\r\n  img: string;\r\n  text: string;\r\n}[];\r\n\r\ntype content = {\r\n  title: string;\r\n  sub: string;\r\n}[];\r\n\r\nfunction Home() {\r\n  const techList: tech = [\r\n    {\r\n      img: 'redux.png',\r\n      text: 'redux',\r\n    },\r\n    {\r\n      img: 'saga.png',\r\n      text: 'redux-saga',\r\n    },\r\n    {\r\n      img: '73084694_2423120627903939_2518955300711563264_n.png',\r\n      text: '외부 맵 API',\r\n    },\r\n  ];\r\n  const contentList: content = [\r\n    {\r\n      title: '1111',\r\n      sub: '1111',\r\n    },\r\n    {\r\n      title: '2222',\r\n      sub: '2222',\r\n    },\r\n    {\r\n      title: '3333',\r\n      sub: '3333',\r\n    },\r\n    {\r\n      title: '4444',\r\n      sub: '4444',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col md={12}>\r\n          <Title>\r\n            <Container fluid=\"md\">\r\n              <TitleBox>\r\n                <H2>실력있는 웹 개발자는&nbsp;</H2> <H1>페이지로&nbsp;</H1>\r\n                <H2>말한다!</H2>\r\n              </TitleBox>\r\n            </Container>\r\n          </Title>\r\n        </Col>\r\n      </Row>\r\n      <Container fluid=\"md\">\r\n        <Row>\r\n          <Col md={12}>\r\n            <GrayBox>\r\n              <strong>현재 페이지는 react를 사용하여 만들어졌습니다.</strong>\r\n              <RelativeBox>\r\n                <LogoForm>\r\n                  <img src={logosvg} className=\"App-logo\" alt=\"logo\" />\r\n                </LogoForm>\r\n              </RelativeBox>\r\n            </GrayBox>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          {techList.map((data, i) => (\r\n            <Col md={4} key={i}>\r\n              <TechForm>\r\n                <TechImgTem>\r\n                  <TechImg\r\n                    crossOrigin=\"anonymous\"\r\n                    src={data.img}\r\n                    alt={data.text}\r\n                  ></TechImg>\r\n                </TechImgTem>\r\n                <TechText>{data.text}</TechText>\r\n              </TechForm>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <Row>\r\n          {contentList.map((data, i) => (\r\n            <Col md={6} key={i}>\r\n              <ContentForm>\r\n                <ContentTitle>{data.title}</ContentTitle>\r\n                <ContentSub>{data.sub}</ContentSub>\r\n              </ContentForm>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\r\nimport { Redirect, Route, Switch } from 'react-router';\r\nimport Home from '../components/home/Home';\r\n\r\nconst ControlRoute: React.FC = () => (\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <Route path=\"/\" exact component={Home} />\r\n    {/* <Route path=\"/modules\" component={} /> */}\r\n\r\n    <Redirect path=\"*\" to=\"/\" />\r\n  </BrowserRouter>\r\n);\r\nexport default ControlRoute;\r\n","import { Container, Nav, Navbar } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\r\nimport { darkMode, lightMode } from '../../store/themeMode';\r\nconst FooterComponent = styled.div`\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  background-color: #212528;\r\n  overflow: hidden;\r\n  color: white;\r\n  padding-top: 3rem;\r\n  padding-bottom: 3rem;\r\n`;\r\nconst FooterText = styled.div`\r\n  margin-top: 1rem;\r\n`;\r\nfunction Footer() {\r\n  return (\r\n    <FooterComponent>\r\n      <Container>\r\n        <h2>\r\n          <strong>박성무의 경력기술서</strong>\r\n        </h2>\r\n        <FooterText>만든 사람 : 박성무</FooterText>\r\n        <FooterText>문의 메일: tjdanqkr@gmail.com</FooterText>\r\n        <FooterText>거주지: 서울특별시 신림역 인근</FooterText>\r\n      </Container>\r\n    </FooterComponent>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import styled, { ThemeProvider } from 'styled-components';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Headers from './components/layout/Headers';\r\nimport { darktheme, lighttheme } from './style/theme';\r\nimport GlobalStyle from './style/global-style';\r\nimport { useAppSelector } from './store/hooks';\r\nimport { Container } from 'react-bootstrap';\r\nimport ControlRoute from './router';\r\nimport Footer from './components/layout/Footer';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './App.css';\r\nconst MyContainer = styled.div`\r\n  background-color: ${(props) => props.theme.mainBackground};\r\n  color: ${(props) => props.theme.color};\r\n  position: relative;\r\n  min-height: 100vh;\r\n  display: grid;\r\n  align-items: stretch;\r\n`;\r\nconst Main = styled.div`\r\n  min-height: 100%;\r\n  margin-bottom: 2em;\r\n`;\r\n\r\nfunction App() {\r\n  const mode = useAppSelector((state) => state.theme.mode);\r\n  return (\r\n    <ThemeProvider theme={mode === 'dark' ? darktheme : lighttheme}>\r\n      <GlobalStyle />\r\n      <MyContainer>\r\n        <header>\r\n          <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <Headers></Headers>\r\n          </BrowserRouter>\r\n        </header>\r\n        <main>\r\n          <Main>\r\n            <ControlRoute></ControlRoute>\r\n          </Main>\r\n        </main>\r\n        <footer>\r\n          <Footer></Footer>\r\n        </footer>\r\n      </MyContainer>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport themeMode from './themeMode';\r\nconst isDev = process.env.NODE_ENV !== 'production';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    theme: themeMode,\r\n  },\r\n  devTools: isDev,\r\n});\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}